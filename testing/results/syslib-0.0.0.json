[
  {
    "built_with_features": null,
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features"
      ],
      "code": 101,
      "stderr": "   Compiling syslib v0.0.0 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/syslib-0.0.0)\nerror: syslib only supports Linux\n --> src/lib.rs:4:1\n  |\n4 | compile_error!(\"syslib only supports Linux\");\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::Error`\n --> src/sock.rs:1:35\n  |\n1 | use crate::{enumeration, c_flags, Error};\n  |                                   ^^^^^ no `Error` in the root\n  |\n  = help: consider importing one of these items instead:\n          core::error::Error\n          core::fmt::Error\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n  --> src/sock.rs:34:6\n   |\n34 | impl std::ops::BitOr<TypeFlags> for Type {\n   |      ^^^ use of undeclared crate or module `std`\n   |\nhelp: consider importing this module\n   |\n1  + use core::ops;\n   |\nhelp: if you import `ops`, refer to it directly\n   |\n34 - impl std::ops::BitOr<TypeFlags> for Type {\n34 + impl ops::BitOr<TypeFlags> for Type {\n   |\n\nerror[E0412]: cannot find type `Error` in module `$crate`\n   --> src/lib.rs:148:34\n    |\n148 |               type Error = $crate::Error;\n    |                                    ^^^^^ not found in `$crate`\n    |\n   ::: src/sock.rs:67:1\n    |\n67  | / c_flags!{\n68  | |     pub Flags(u32) {\n69  | |         OOB = 0x01,\n70  | |         PEEK = 0x02,\n...   |\n74  | |     } _ => Err(crate::Error::EINVAL)\n75  | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `c_flags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing one of these items\n   --> src/sock.rs:1:1\n    |\n1   + use core::error::Error;\n   --> |src/sock.rs:1:1\n    |\n1   + use core::fmt::Error;\n    |\n\nerror[E0433]: failed to resolve: could not find `Error` in the crate root\n  --> src/sock.rs:74:23\n   |\n74 |     } _ => Err(crate::Error::EINVAL)\n   |                       ^^^^^ could not find `Error` in the crate root\n   |\nhelp: consider importing one of these items\n   |\n1  + use core::error::Error;\n   |\n1  + use core::fmt::Error;\n   |\nhelp: if you import `Error`, refer to it directly\n   |\n74 -     } _ => Err(crate::Error::EINVAL)\n74 +     } _ => Err(Error::EINVAL)\n   |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:102:26\n    |\n102 |         Address(unsafe { std::slice::from_raw_parts(self as *const _ as *const u8, std::mem::size_of::<Self>()) })\n    |                          ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::slice;\n    |\nhelp: if you import `slice`, refer to it directly\n    |\n102 -         Address(unsafe { std::slice::from_raw_parts(self as *const _ as *const u8, std::mem::size_of::<Self>()) })\n102 +         Address(unsafe { slice::from_raw_parts(self as *const _ as *const u8, std::mem::size_of::<Self>()) })\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:102:84\n    |\n102 |         Address(unsafe { std::slice::from_raw_parts(self as *const _ as *const u8, std::mem::size_of::<Self>()) })\n    |                                                                                    ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n102 -         Address(unsafe { std::slice::from_raw_parts(self as *const _ as *const u8, std::mem::size_of::<Self>()) })\n102 +         Address(unsafe { std::slice::from_raw_parts(self as *const _ as *const u8, mem::size_of::<Self>()) })\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:112:42\n    |\n112 | struct AncillaryData<T, const N: usize>([std::mem::MaybeUninit<T>; N]);\n    |                                          ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n112 - struct AncillaryData<T, const N: usize>([std::mem::MaybeUninit<T>; N]);\n112 + struct AncillaryData<T, const N: usize>([mem::MaybeUninit<T>; N]);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:124:18\n    |\n124 |             len: std::mem::size_of::<Ancillary<T, 0>>(),\n    |                  ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n124 -             len: std::mem::size_of::<Ancillary<T, 0>>(),\n124 +             len: mem::size_of::<Ancillary<T, 0>>(),\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:127:34\n    |\n127 |             data: AncillaryData([std::mem::MaybeUninit::uninit(); N])\n    |                                  ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this union\n    |\n1   + use core::mem::MaybeUninit;\n    |\nhelp: if you import `MaybeUninit`, refer to it directly\n    |\n127 -             data: AncillaryData([std::mem::MaybeUninit::uninit(); N])\n127 +             data: AncillaryData([MaybeUninit::uninit(); N])\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:131:44\n    |\n131 |         let mut ancillary = AncillaryData([std::mem::MaybeUninit::uninit(); N]);\n    |                                            ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this union\n    |\n1   + use core::mem::MaybeUninit;\n    |\nhelp: if you import `MaybeUninit`, refer to it directly\n    |\n131 -         let mut ancillary = AncillaryData([std::mem::MaybeUninit::uninit(); N]);\n131 +         let mut ancillary = AncillaryData([MaybeUninit::uninit(); N]);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:135:26\n    |\n135 |         let header_len = std::mem::size_of::<Ancillary<T, 0>>();\n    |                          ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n135 -         let header_len = std::mem::size_of::<Ancillary<T, 0>>();\n135 +         let header_len = mem::size_of::<Ancillary<T, 0>>();\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:136:25\n    |\n136 |         let item_len = (std::mem::size_of::<std::mem::MaybeUninit<T>>() - header_len) / N;\n    |                         ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n136 -         let item_len = (std::mem::size_of::<std::mem::MaybeUninit<T>>() - header_len) / N;\n136 +         let item_len = (mem::size_of::<std::mem::MaybeUninit<T>>() - header_len) / N;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:136:45\n    |\n136 |         let item_len = (std::mem::size_of::<std::mem::MaybeUninit<T>>() - header_len) / N;\n    |                                             ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n136 -         let item_len = (std::mem::size_of::<std::mem::MaybeUninit<T>>() - header_len) / N;\n136 +         let item_len = (std::mem::size_of::<mem::MaybeUninit<T>>() - header_len) / N;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:145:24\n    |\n145 |         if self.len == std::mem::size_of::<std::mem::MaybeUninit<T>>() {\n    |                        ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n145 -         if self.len == std::mem::size_of::<std::mem::MaybeUninit<T>>() {\n145 +         if self.len == mem::size_of::<std::mem::MaybeUninit<T>>() {\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:145:44\n    |\n145 |         if self.len == std::mem::size_of::<std::mem::MaybeUninit<T>>() {\n    |                                            ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n145 -         if self.len == std::mem::size_of::<std::mem::MaybeUninit<T>>() {\n145 +         if self.len == std::mem::size_of::<mem::MaybeUninit<T>>() {\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:148:37\n    |\n148 |             self.data.0[(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()].write(item);\n    |                                     ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n148 -             self.data.0[(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()].write(item);\n148 +             self.data.0[(self.len - mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()].write(item);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:148:79\n    |\n148 |             self.data.0[(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()].write(item);\n    |                                                                               ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n148 -             self.data.0[(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()].write(item);\n148 +             self.data.0[(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / mem::size_of::<std::mem::MaybeUninit<T>>()].write(item);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:148:99\n    |\n148 |             self.data.0[(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()].write(item);\n    |                                                                                                   ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n148 -             self.data.0[(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()].write(item);\n148 +             self.data.0[(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<mem::MaybeUninit<T>>()].write(item);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:149:26\n    |\n149 |             self.len += (std::mem::size_of::<std::mem::MaybeUninit<T>>() - std::mem::size_of::<Ancillary<T, 0>>()) / N;\n    |                          ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n149 -             self.len += (std::mem::size_of::<std::mem::MaybeUninit<T>>() - std::mem::size_of::<Ancillary<T, 0>>()) / N;\n149 +             self.len += (mem::size_of::<std::mem::MaybeUninit<T>>() - std::mem::size_of::<Ancillary<T, 0>>()) / N;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:149:46\n    |\n149 |             self.len += (std::mem::size_of::<std::mem::MaybeUninit<T>>() - std::mem::size_of::<Ancillary<T, 0>>()) / N;\n    |                                              ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n149 -             self.len += (std::mem::size_of::<std::mem::MaybeUninit<T>>() - std::mem::size_of::<Ancillary<T, 0>>()) / N;\n149 +             self.len += (std::mem::size_of::<mem::MaybeUninit<T>>() - std::mem::size_of::<Ancillary<T, 0>>()) / N;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:149:76\n    |\n149 |             self.len += (std::mem::size_of::<std::mem::MaybeUninit<T>>() - std::mem::size_of::<Ancillary<T, 0>>()) / N;\n    |                                                                            ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n149 -             self.len += (std::mem::size_of::<std::mem::MaybeUninit<T>>() - std::mem::size_of::<Ancillary<T, 0>>()) / N;\n149 +             self.len += (std::mem::size_of::<std::mem::MaybeUninit<T>>() - mem::size_of::<Ancillary<T, 0>>()) / N;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:155:30\n    |\n155 |     pub fn items(&self) -> &[std::mem::MaybeUninit<T>] {\n    |                              ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n155 -     pub fn items(&self) -> &[std::mem::MaybeUninit<T>] {\n155 +     pub fn items(&self) -> &[mem::MaybeUninit<T>] {\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:156:36\n    |\n156 |         &self.data.0[..(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()]\n    |                                    ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n156 -         &self.data.0[..(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()]\n156 +         &self.data.0[..(self.len - mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()]\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:156:78\n    |\n156 |         &self.data.0[..(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()]\n    |                                                                              ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n156 -         &self.data.0[..(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()]\n156 +         &self.data.0[..(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / mem::size_of::<std::mem::MaybeUninit<T>>()]\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/sock.rs:156:98\n    |\n156 |         &self.data.0[..(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()]\n    |                                                                                                  ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n156 -         &self.data.0[..(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<std::mem::MaybeUninit<T>>()]\n156 +         &self.data.0[..(self.len - std::mem::size_of::<Ancillary<T, 0>>()) / std::mem::size_of::<mem::MaybeUninit<T>>()]\n    |\n\nwarning: unused import: `sys::*`\n --> src/lib.rs:7:9\n  |\n7 | pub use sys::*;\n  |         ^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nerror[E0392]: type parameter `T` is never used\n   --> src/sock.rs:115:22\n    |\n115 | pub struct Ancillary<T, const N: usize> {\n    |                      ^ unused type parameter\n...\n119 |     data: AncillaryData<T, N>\n    |                         - `T` is named here, but is likely unused in the containing type\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n    = help: if you intended `T` to be a const parameter, use `const T: /* Type */` instead\n\nSome errors have detailed explanations: E0392, E0412, E0432, E0433.\nFor more information about an error, try `rustc --explain E0392`.\nwarning: `syslib` (lib) generated 1 warning\nerror: could not compile `syslib` (lib) due to 27 previous errors; 1 warning emitted\n",
      "stdout": ""
    },
    "features": [
      "std"
    ],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/syslib-0.0.0/src",
    "time_to_build": 199,
    "time_to_solve": 69
  }
]