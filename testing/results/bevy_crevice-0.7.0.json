[
  {
    "built_with_features": null,
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features"
      ],
      "code": 101,
      "stderr": "   Compiling bevy_crevice v0.7.0 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/bevy_crevice-0.7.0)\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/glsl.rs:4:5\n  |\n4 | use std::marker::PhantomData;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n  --> src/glsl.rs:26:13\n   |\n26 |         use std::fmt::Write;\n   |             ^^^ use of undeclared crate or module `std`\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/glsl.rs:17:31\n   |\n17 |     fn push_to_string(s: &mut String);\n   |                               ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/glsl.rs:21:31\n   |\n21 |     fn push_to_string(_: &mut String) {}\n   |                               ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/glsl.rs:25:31\n   |\n25 |     fn push_to_string(s: &mut String) {\n   |                               ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/glsl.rs:44:33\n   |\n44 |     fn enumerate_fields(s: &mut String);\n   |                                 ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/glsl.rs:47:29\n   |\n47 |     fn glsl_definition() -> String {\n   |                             ^^^^^^ not found in this scope\n\nwarning: unexpected `cfg` condition name: `const_evaluatable_checked`\n  --> src/std140/dynamic_uniform.rs:32:11\n   |\n32 |     #[cfg(const_evaluatable_checked)]\n   |           ^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(const_evaluatable_checked)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(const_evaluatable_checked)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `const_evaluatable_checked`\n  --> src/std140/dynamic_uniform.rs:37:15\n   |\n37 |     #[cfg(not(const_evaluatable_checked))]\n   |               ^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(const_evaluatable_checked)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(const_evaluatable_checked)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nerror[E0433]: failed to resolve: use of undeclared type `String`\n  --> src/glsl.rs:48:26\n   |\n48 |         let mut output = String::new();\n   |                          ^^^^^^ use of undeclared type `String`\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\nwarning: `bevy_crevice` (lib) generated 2 warnings\nerror: could not compile `bevy_crevice` (lib) due to 8 previous errors; 2 warnings emitted\n",
      "stdout": ""
    },
    "features": [
      "std"
    ],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/bevy_crevice-0.7.0/src",
    "time_to_build": 374,
    "time_to_solve": 61
  }
]