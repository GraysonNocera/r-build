[
  {
    "built_with_features": null,
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features"
      ],
      "code": 101,
      "stderr": "   Compiling splay_tree v0.3.1 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/splay_tree-0.3.1)\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/iter.rs:5:5\n  |\n5 | use std::vec::Vec;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0432]: unresolved import `std`\n --> src/iter.rs:4:5\n  |\n4 | use std::mem;\n  |     ^^^ help: a similar path exists: `crate::std`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/map.rs:4:5\n  |\n4 | use std::borrow::Borrow;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0432]: unresolved import `std`\n --> src/heap.rs:4:5\n  |\n4 | use std::cmp;\n  |     ^^^ help: a similar path exists: `crate::std`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/set.rs:5:5\n  |\n5 | use std::borrow::Borrow;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0432]: unresolved import `std`\n --> src/map.rs:5:5\n  |\n5 | use std::mem;\n  |     ^^^ help: a similar path exists: `crate::std`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/set.rs:7:5\n  |\n7 | use std::iter::Peekable;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0432]: unresolved import `std`\n --> src/set.rs:6:5\n  |\n6 | use std::cmp;\n  |     ^^^ help: a similar path exists: `crate::std`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/tree_core.rs:3:5\n  |\n3 | use std::borrow::Borrow;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0432]: unresolved import `std`\n --> src/set.rs:8:5\n  |\n8 | use std::ops;\n  |     ^^^ help: a similar path exists: `crate::std`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/tree_core.rs:5:5\n  |\n5 | use std::cmp::Ordering;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0432]: unresolved import `std`\n --> src/tree_core.rs:4:5\n  |\n4 | use std::cmp;\n  |     ^^^ help: a similar path exists: `crate::std`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0432]: unresolved import `std`\n --> src/tree_core.rs:6:5\n  |\n6 | use std::hash;\n  |     ^^^ help: a similar path exists: `crate::std`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0432]: unresolved import `std`\n --> src/tree_core.rs:7:5\n  |\n7 | use std::mem;\n  |     ^^^ help: a similar path exists: `crate::std`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0432]: unresolved import `std`\n --> src/tree_core.rs:8:5\n  |\n8 | use std::slice;\n  |     ^^^ help: a similar path exists: `crate::std`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n  --> src/tree_core.rs:10:5\n   |\n10 | use std::vec::Vec;\n   |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/tree_core.rs:282:13\n    |\n282 |         use std::mem::replace;\n    |             ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/vec_like.rs:2:5\n  |\n2 | use std::borrow::Borrow;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0432]: unresolved import `std`\n --> src/tree_core.rs:9:5\n  |\n9 | use std::u32;\n  |     ^^^ help: a similar path exists: `crate::std`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0432]: unresolved import `std`\n --> src/vec_like.rs:3:5\n  |\n3 | use std::slice;\n  |     ^^^ help: a similar path exists: `crate::std`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/heap.rs:262:9\n    |\n262 | impl<T> std::iter::FromIterator<T> for SplayHeap<T>\n    |         ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing one of these modules\n    |\n2   + use crate::std::iter;\n    |\n2   + use core::iter;\n    |\nhelp: if you import `iter`, refer to it directly\n    |\n262 - impl<T> std::iter::FromIterator<T> for SplayHeap<T>\n262 + impl<T> iter::FromIterator<T> for SplayHeap<T>\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/map.rs:603:12\n    |\n603 | impl<K, V> std::iter::FromIterator<(K, V)> for SplayMap<K, V>\n    |            ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing one of these modules\n    |\n2   + use crate::std::iter;\n    |\n2   + use core::iter;\n    |\nhelp: if you import `iter`, refer to it directly\n    |\n603 - impl<K, V> std::iter::FromIterator<(K, V)> for SplayMap<K, V>\n603 + impl<K, V> iter::FromIterator<(K, V)> for SplayMap<K, V>\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/set.rs:699:9\n    |\n699 | impl<T> std::iter::FromIterator<T> for SplaySet<T>\n    |         ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing one of these modules\n    |\n2   + use crate::std::iter;\n    |\n2   + use core::iter;\n    |\nhelp: if you import `iter`, refer to it directly\n    |\n699 - impl<T> std::iter::FromIterator<T> for SplaySet<T>\n699 + impl<T> iter::FromIterator<T> for SplaySet<T>\n    |\n\nerror[E0659]: `alloc` is ambiguous\n  --> src/lib.rs:16:13\n   |\n16 |     pub use alloc::*;\n   |             ^^^^^ ambiguous name\n   |\n   = note: ambiguous because of a conflict between a name from a glob import and an outer scope during import or macro resolution\nnote: `alloc` could refer to the module imported here\n  --> src/lib.rs:16:13\n   |\n16 |     pub use alloc::*;\n   |             ^^^^^^^^\n   = help: consider adding an explicit import of `alloc` to disambiguate\n   = help: or use `self::alloc` to refer to this module unambiguously\nnote: `alloc` could also refer to the crate imported here\n  --> src/lib.rs:12:1\n   |\n12 | pub extern crate alloc;\n   | ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: use `::alloc` to refer to this crate unambiguously\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --> src/lib.rs:3:35\n  |\n3 | #![cfg_attr(not(feature = \"std\"), feature(alloc))]\n  |                                   ^^^^^^^^^^^^^^\n\nwarning: unused `#[macro_use]` import\n  --> src/lib.rs:11:1\n   |\n11 | #[macro_use]\n   | ^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused imports: `borrow`, `cmp`, `fmt`, `hash`, `iter`, `mem`, `ops`, `slice`, and `u32`\n  --> src/lib.rs:17:20\n   |\n17 |     pub use core::{borrow, cmp, fmt, hash, iter, mem, ops, slice, u32};\n   |                    ^^^^^^  ^^^  ^^^  ^^^^  ^^^^  ^^^  ^^^  ^^^^^  ^^^\n\nwarning: the feature `alloc` has been stable since 1.36.0 and no longer requires an attribute to enable\n --> src/lib.rs:3:43\n  |\n3 | #![cfg_attr(not(feature = \"std\"), feature(alloc))]\n  |                                           ^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nerror[E0392]: type parameter `T` is never used\n  --> src/heap.rs:23:21\n   |\n23 | pub struct IntoIter<T>(iter::IntoIter<Item<T>, ()>);\n   |                     ^                      - `T` is named here, but is likely unused in the containing type\n   |                     |\n   |                     unused type parameter\n   |\n   = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n   = help: if you intended `T` to be a const parameter, use `const T: /* Type */` instead\n\nerror[E0392]: type parameter `T` is never used\n  --> src/heap.rs:91:22\n   |\n91 | pub struct SplayHeap<T> {\n   |                      ^ unused type parameter\n92 |     tree: tree_core::Tree<Item<T>, ()>,\n   |                                - `T` is named here, but is likely unused in the containing type\n   |\n   = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n   = help: if you intended `T` to be a const parameter, use `const T: /* Type */` instead\n\nerror[E0392]: type parameter `K` is never used\n  --> src/map.rs:54:21\n   |\n54 | pub struct SplayMap<K, V> {\n   |                     ^ unused type parameter\n55 |     tree: tree_core::Tree<K, V>,\n   |                           - `K` is named here, but is likely unused in the containing type\n   |\n   = help: consider removing `K`, referring to it in a field, or using a marker such as `PhantomData`\n   = help: if you intended `K` to be a const parameter, use `const K: /* Type */` instead\n\nerror[E0392]: type parameter `V` is never used\n  --> src/map.rs:54:24\n   |\n54 | pub struct SplayMap<K, V> {\n   |                        ^ unused type parameter\n55 |     tree: tree_core::Tree<K, V>,\n   |                              - `V` is named here, but is likely unused in the containing type\n   |\n   = help: consider removing `V`, referring to it in a field, or using a marker such as `PhantomData`\n   = help: if you intended `V` to be a const parameter, use `const V: /* Type */` instead\n\nerror[E0392]: type parameter `K` is never used\n   --> src/map.rs:704:21\n    |\n704 | pub struct IntoIter<K, V>(iter::IntoIter<K, V>);\n    |                     ^                    - `K` is named here, but is likely unused in the containing type\n    |                     |\n    |                     unused type parameter\n    |\n    = help: consider removing `K`, referring to it in a field, or using a marker such as `PhantomData`\n    = help: if you intended `K` to be a const parameter, use `const K: /* Type */` instead\n\nerror[E0392]: type parameter `V` is never used\n   --> src/map.rs:704:24\n    |\n704 | pub struct IntoIter<K, V>(iter::IntoIter<K, V>);\n    |                        ^                    - `V` is named here, but is likely unused in the containing type\n    |                        |\n    |                        unused type parameter\n    |\n    = help: consider removing `V`, referring to it in a field, or using a marker such as `PhantomData`\n    = help: if you intended `V` to be a const parameter, use `const V: /* Type */` instead\n\nerror[E0392]: type parameter `T` is never used\n  --> src/set.rs:39:21\n   |\n39 | pub struct SplaySet<T> {\n   |                     ^ unused type parameter\n40 |     tree: tree_core::Tree<T, ()>,\n   |                           - `T` is named here, but is likely unused in the containing type\n   |\n   = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n   = help: if you intended `T` to be a const parameter, use `const T: /* Type */` instead\n\nerror[E0392]: type parameter `T` is never used\n   --> src/set.rs:858:21\n    |\n858 | pub struct IntoIter<T>(iter::IntoIter<T, ()>);\n    |                     ^                 - `T` is named here, but is likely unused in the containing type\n    |                     |\n    |                     unused type parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n    = help: if you intended `T` to be a const parameter, use `const T: /* Type */` instead\n\nerror[E0392]: type parameter `T` is never used\n   --> src/set.rs:972:24\n    |\n972 | pub struct VecLike<'a, T: 'a> {\n    |                        ^ unused type parameter\n973 |     inner: vec_like::VecLike<'a, T, ()>,\n    |                                  - `T` is named here, but is likely unused in the containing type\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n\nerror[E0392]: lifetime parameter `'a` is never used\n    --> src/set.rs:1306:24\n     |\n1306 | pub struct VecLikeIter<'a, T: 'a>(vec_like::Iter<'a, T, ()>);\n     |                        ^^ unused lifetime parameter\n     |\n     = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\nerror[E0392]: type parameter `T` is never used\n    --> src/set.rs:1306:28\n     |\n1306 | pub struct VecLikeIter<'a, T: 'a>(vec_like::Iter<'a, T, ()>);\n     |                            ^ unused type parameter   - `T` is named here, but is likely unused in the containing type\n     |\n     = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n\nerror[E0392]: type parameter `K` is never used\n --> src/vec_like.rs:6:24\n  |\n6 | pub struct VecLike<'a, K: 'a, V: 'a> {\n  |                        ^ unused type parameter\n7 |     tree: &'a tree_core::Tree<K, V>,\n  |                               - `K` is named here, but is likely unused in the containing type\n  |\n  = help: consider removing `K`, referring to it in a field, or using a marker such as `PhantomData`\n\nerror[E0392]: type parameter `V` is never used\n --> src/vec_like.rs:6:31\n  |\n6 | pub struct VecLike<'a, K: 'a, V: 'a> {\n  |                               ^ unused type parameter\n7 |     tree: &'a tree_core::Tree<K, V>,\n  |                                  - `V` is named here, but is likely unused in the containing type\n  |\n  = help: consider removing `V`, referring to it in a field, or using a marker such as `PhantomData`\n\nSome errors have detailed explanations: E0392, E0432, E0433, E0554, E0659.\nFor more information about an error, try `rustc --explain E0392`.\nwarning: `splay_tree` (lib) generated 3 warnings\nerror: could not compile `splay_tree` (lib) due to 38 previous errors; 3 warnings emitted\n",
      "stdout": ""
    },
    "features": [
      "std"
    ],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/splay_tree-0.3.1/src",
    "time_to_build": 570,
    "time_to_solve": 118
  }
]