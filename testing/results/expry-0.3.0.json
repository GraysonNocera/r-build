[
  {
    "built_with_features": null,
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features"
      ],
      "code": 101,
      "stderr": "   Compiling expry v0.3.0 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/expry-0.3.0)\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/lib.rs:142:5\n    |\n142 | use std::collections::BTreeMap;\n    |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/lib.rs:143:5\n    |\n143 | use std::fmt::Write;\n    |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/raw_utils.rs:5:5\n  |\n5 | use std::fmt::Display;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/lib.rs:797:5\n    |\n797 | use std::ops::{Deref, DerefMut};\n    |     ^^^ use of undeclared crate or module `std`\n\nerror: cannot find macro `eprintln` in this scope\n    --> src/lib.rs:5206:58\n     |\n5206 |         debug_assert!(expry_decode(output).map_err(|err| eprintln!(\"error = {}\", err)).is_ok());\n     |                                                          ^^^^^^^^\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:4646:40\n     |\n4646 | pub fn to_expry_object<Key,T>(values: &std::collections::HashMap<Key,T>) -> EncodedValueVec \n     |                                        ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:4666:55\n     |\n4666 | pub fn to_expry_object_in_scope<'b,'c,Key,T>(values: &std::collections::HashMap<Key,T>, scope: &mut MemoryScope<'c>) -> EncodedValueRef<'b>\n     |                                                       ^^^ use of undeclared crate or module `std`\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/memorypool.rs:33:28\n   |\n33 | pub fn to_hex(s: &[u8]) -> String {\n   |                            ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these structs\n   |\n1  + use crate::String;\n   |\n1  + use alloc::string::String;\n   |\n\nerror[E0433]: failed to resolve: use of undeclared type `String`\n  --> src/memorypool.rs:34:20\n   |\n34 |     let mut item = String::with_capacity(s.len()*2);\n   |                    ^^^^^^ use of undeclared type `String`\n   |\nhelp: consider importing one of these structs\n   |\n1  + use crate::String;\n   |\n1  + use alloc::string::String;\n   |\n\nerror[E0412]: cannot find type `Vec` in this scope\n  --> src/memorypool.rs:64:42\n   |\n64 | pub fn url_escape_u8(c: u8, buffer: &mut Vec<u8>) -> Option<&[u8]> {\n   |                                          ^^^ not found in this scope\n   |\nhelp: consider importing one of these structs\n   |\n1  + use crate::Vec;\n   |\n1  + use alloc::vec::Vec;\n   |\n\nerror[E0412]: cannot find type `Vec` in this scope\n  --> src/memorypool.rs:93:42\n   |\n93 | pub fn url_encode_u8(c: u8, buffer: &mut Vec<u8>) -> Option<&[u8]> {\n   |                                          ^^^ not found in this scope\n   |\nhelp: consider importing one of these structs\n   |\n1  + use crate::Vec;\n   |\n1  + use alloc::vec::Vec;\n   |\n\nerror[E0433]: failed to resolve: use of undeclared type `Vec`\n   --> src/memorypool.rs:131:30\n    |\n131 |             let mut output = Vec::new();\n    |                              ^^^ use of undeclared type `Vec`\n    |\nhelp: consider importing one of these structs\n    |\n1   + use crate::Vec;\n    |\n1   + use alloc::vec::Vec;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:146:20\n    |\n146 |             return std::borrow::Cow::Owned(output);\n    |                    ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this enum\n    |\n1   + use alloc::borrow::Cow;\n    |\nhelp: if you import `Cow`, refer to it directly\n    |\n146 -             return std::borrow::Cow::Owned(output);\n146 +             return Cow::Owned(output);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:149:5\n    |\n149 |     std::borrow::Cow::Borrowed(input)\n    |     ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this enum\n    |\n1   + use alloc::borrow::Cow;\n    |\nhelp: if you import `Cow`, refer to it directly\n    |\n149 -     std::borrow::Cow::Borrowed(input)\n149 +     Cow::Borrowed(input)\n    |\n\nerror[E0412]: cannot find type `Vec` in this scope\n   --> src/memorypool.rs:152:35\n    |\n152 | pub type ReplaceFn = fn (u8, &mut Vec<u8>) -> Option<&[u8]>;\n    |                                   ^^^ not found in this scope\n    |\nhelp: consider importing one of these structs\n    |\n1   + use crate::Vec;\n    |\n1   + use alloc::vec::Vec;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:172:26\n    |\n172 |             let layout = std::alloc::Layout::from_size_align_unchecked(bytes, 1);\n    |                          ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing one of these structs\n    |\n1   + use core::alloc::Layout;\n    |\n1   + use alloc::alloc::Layout;\n    |\nhelp: if you import `Layout`, refer to it directly\n    |\n172 -             let layout = std::alloc::Layout::from_size_align_unchecked(bytes, 1);\n172 +             let layout = Layout::from_size_align_unchecked(bytes, 1);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:173:23\n    |\n173 |             let ptr = std::alloc::alloc(layout);\n    |                       ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing one of these items\n    |\n1   + use crate::alloc;\n    |\n1   + use alloc::alloc;\n    |\nhelp: if you import `alloc`, refer to it directly\n    |\n173 -             let ptr = std::alloc::alloc(layout);\n173 +             let ptr = alloc::alloc(layout);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:198:26\n    |\n198 |             let layout = std::alloc::Layout::from_size_align_unchecked(self.size, 1);\n    |                          ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing one of these structs\n    |\n1   + use core::alloc::Layout;\n    |\n1   + use alloc::alloc::Layout;\n    |\nhelp: if you import `Layout`, refer to it directly\n    |\n198 -             let layout = std::alloc::Layout::from_size_align_unchecked(self.size, 1);\n198 +             let layout = Layout::from_size_align_unchecked(self.size, 1);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:199:13\n    |\n199 |             std::alloc::dealloc(self.ptr, layout);\n    |             ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use alloc::alloc;\n    |\nhelp: if you import `alloc`, refer to it directly\n    |\n199 -             std::alloc::dealloc(self.ptr, layout);\n199 +             alloc::dealloc(self.ptr, layout);\n    |\n\nerror[E0412]: cannot find type `Vec` in this scope\n   --> src/memorypool.rs:207:14\n    |\n207 |     content: Vec<MemoryPage>, // can have different size then DEFAULT_MEMORY_PAGE_SIZE\n    |              ^^^ not found in this scope\n    |\nhelp: consider importing one of these structs\n    |\n1   + use crate::Vec;\n    |\n1   + use alloc::vec::Vec;\n    |\n\nerror[E0412]: cannot find type `Vec` in this scope\n   --> src/memorypool.rs:208:11\n    |\n208 |     next: Vec<MemoryPage>,    // have all the same DEFAULT_MEMORY_PAGE_SIZE\n    |           ^^^ not found in this scope\n    |\nhelp: consider importing one of these structs\n    |\n1   + use crate::Vec;\n    |\n1   + use alloc::vec::Vec;\n    |\n\nerror[E0412]: cannot find type `Vec` in this scope\n   --> src/memorypool.rs:210:22\n    |\n210 |     delay_execution: Vec<Delayed>,\n    |                      ^^^ not found in this scope\n    |\nhelp: consider importing one of these structs\n    |\n1   + use crate::Vec;\n    |\n1   + use alloc::vec::Vec;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared type `Vec`\n   --> src/memorypool.rs:250:22\n    |\n250 |             content: Vec::with_capacity(0),\n    |                      ^^^ use of undeclared type `Vec`\n    |\nhelp: consider importing one of these structs\n    |\n1   + use crate::Vec;\n    |\n1   + use alloc::vec::Vec;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared type `Vec`\n   --> src/memorypool.rs:251:19\n    |\n251 |             next: Vec::with_capacity(0),\n    |                   ^^^ use of undeclared type `Vec`\n    |\nhelp: consider importing one of these structs\n    |\n1   + use crate::Vec;\n    |\n1   + use alloc::vec::Vec;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared type `Vec`\n   --> src/memorypool.rs:252:30\n    |\n252 |             delay_execution: Vec::new(),\n    |                              ^^^ use of undeclared type `Vec`\n    |\nhelp: consider importing one of these structs\n    |\n1   + use crate::Vec;\n    |\n1   + use alloc::vec::Vec;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:335:22\n    |\n335 |         let length = std::cmp::max(1,count)*size;\n    |                      ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::cmp;\n    |\nhelp: if you import `cmp`, refer to it directly\n    |\n335 -         let length = std::cmp::max(1,count)*size;\n335 +         let length = cmp::max(1,count)*size;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:381:22\n    |\n381 |         let length = std::cmp::max(1,count)*core::mem::size_of::<T>();\n    |                      ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::cmp;\n    |\nhelp: if you import `cmp`, refer to it directly\n    |\n381 -         let length = std::cmp::max(1,count)*core::mem::size_of::<T>();\n381 +         let length = cmp::max(1,count)*core::mem::size_of::<T>();\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:422:13\n    |\n422 |             std::ptr::copy(bytes.as_ptr(), retval, length);\n    |             ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n422 -             std::ptr::copy(bytes.as_ptr(), retval, length);\n422 +             ptr::copy(bytes.as_ptr(), retval, length);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:434:17\n    |\n434 |                 std::ptr::copy(c.as_ptr(), current, c.len());\n    |                 ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n434 -                 std::ptr::copy(c.as_ptr(), current, c.len());\n434 +                 ptr::copy(c.as_ptr(), current, c.len());\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:449:21\n    |\n449 |                     std::ptr::copy(glue.as_ptr(), current, glue.len());\n    |                     ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n449 -                     std::ptr::copy(glue.as_ptr(), current, glue.len());\n449 +                     ptr::copy(glue.as_ptr(), current, glue.len());\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:452:17\n    |\n452 |                 std::ptr::copy(c.as_ptr(), current, c.len());\n    |                 ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n452 -                 std::ptr::copy(c.as_ptr(), current, c.len());\n452 +                 ptr::copy(c.as_ptr(), current, c.len());\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:465:17\n    |\n465 |                 std::ptr::copy(c.as_ptr(), current, c.len());\n    |                 ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n465 -                 std::ptr::copy(c.as_ptr(), current, c.len());\n465 +                 ptr::copy(c.as_ptr(), current, c.len());\n    |\n\nerror[E0412]: cannot find type `Vec` in this scope\n   --> src/memorypool.rs:527:26\n    |\n527 |         let mut buffer : Vec<u8> = Vec::new();\n    |                          ^^^ not found in this scope\n    |\nhelp: consider importing one of these structs\n    |\n1   + use crate::Vec;\n    |\n1   + use alloc::vec::Vec;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared type `Vec`\n   --> src/memorypool.rs:527:36\n    |\n527 |         let mut buffer : Vec<u8> = Vec::new();\n    |                                    ^^^ use of undeclared type `Vec`\n    |\nhelp: consider importing one of these structs\n    |\n1   + use crate::Vec;\n    |\n1   + use alloc::vec::Vec;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:555:16\n    |\n555 |             if std::mem::needs_drop::<T>() {\n    |                ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n555 -             if std::mem::needs_drop::<T>() {\n555 +             if mem::needs_drop::<T>() {\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:574:13\n    |\n574 |             std::ptr::copy_nonoverlapping(object.deref(), retval, 1);\n    |             ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n574 -             std::ptr::copy_nonoverlapping(object.deref(), retval, 1);\n574 +             ptr::copy_nonoverlapping(object.deref(), retval, 1);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:575:16\n    |\n575 |             if std::mem::needs_drop::<T>() {\n    |                ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n575 -             if std::mem::needs_drop::<T>() {\n575 +             if mem::needs_drop::<T>() {\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:583:43\n    |\n583 |     pub fn write_fmt<'b>(&mut self, args: std::fmt::Arguments<'_>) -> &'b str where 'c: 'b {\n    |                                           ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing one of these modules\n    |\n1   + use crate::fmt;\n    |\n1   + use core::fmt;\n    |\n1   + use alloc::fmt;\n    |\nhelp: if you import `fmt`, refer to it directly\n    |\n583 -     pub fn write_fmt<'b>(&mut self, args: std::fmt::Arguments<'_>) -> &'b str where 'c: 'b {\n583 +     pub fn write_fmt<'b>(&mut self, args: fmt::Arguments<'_>) -> &'b str where 'c: 'b {\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:604:26\n    |\n604 |             builder.push(std::mem::take(&mut array[i]));\n    |                          ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n604 -             builder.push(std::mem::take(&mut array[i]));\n604 +             builder.push(mem::take(&mut array[i]));\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:611:18\n    |\n611 |     let object = std::mem::transmute::<* mut (), *mut T>(object);\n    |                  ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n611 -     let object = std::mem::transmute::<* mut (), *mut T>(object);\n611 +     let object = mem::transmute::<* mut (), *mut T>(object);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:612:5\n    |\n612 |     std::ptr::drop_in_place(object);\n    |     ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n612 -     std::ptr::drop_in_place(object);\n612 +     ptr::drop_in_place(object);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:636:17\n    |\n636 |                 std::ptr::drop_in_place(self.ptr.add(i));\n    |                 ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n636 -                 std::ptr::drop_in_place(self.ptr.add(i));\n636 +                 ptr::drop_in_place(self.ptr.add(i));\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:689:17\n    |\n689 |                 std::ptr::copy(&value.clone(), self.ptr.add(i), 1);\n    |                 ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n689 -                 std::ptr::copy(&value.clone(), self.ptr.add(i), 1);\n689 +                 ptr::copy(&value.clone(), self.ptr.add(i), 1);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:703:12\n    |\n703 |         if std::mem::needs_drop::<T>() {\n    |            ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n703 -         if std::mem::needs_drop::<T>() {\n703 +         if mem::needs_drop::<T>() {\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:715:12\n    |\n715 |         if std::mem::needs_drop::<T>() {\n    |            ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n715 -         if std::mem::needs_drop::<T>() {\n715 +         if mem::needs_drop::<T>() {\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:718:21\n    |\n718 |                     std::ptr::drop_in_place(self.ptr.add(i));\n    |                     ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n718 -                     std::ptr::drop_in_place(self.ptr.add(i));\n718 +                     ptr::drop_in_place(self.ptr.add(i));\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:730:17\n    |\n730 |                 std::ptr::copy(self.ptr, ptr, self.len);\n    |                 ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n730 -                 std::ptr::copy(self.ptr, ptr, self.len);\n730 +                 ptr::copy(self.ptr, ptr, self.len);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:743:13\n    |\n743 |             std::ptr::copy(self.ptr.add(pos), self.ptr.add(pos+1), self.len-pos);\n    |             ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n743 -             std::ptr::copy(self.ptr.add(pos), self.ptr.add(pos+1), self.len-pos);\n743 +             ptr::copy(self.ptr.add(pos), self.ptr.add(pos+1), self.len-pos);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:744:13\n    |\n744 |             std::ptr::copy(&v, self.ptr.add(pos), 1);\n    |             ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n744 -             std::ptr::copy(&v, self.ptr.add(pos), 1);\n744 +             ptr::copy(&v, self.ptr.add(pos), 1);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:746:9\n    |\n746 |         std::mem::forget(v);\n    |         ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n746 -         std::mem::forget(v);\n746 +         mem::forget(v);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:755:13\n    |\n755 |             std::ptr::copy(&v, self.ptr.add(self.len), 1);\n    |             ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n755 -             std::ptr::copy(&v, self.ptr.add(self.len), 1);\n755 +             ptr::copy(&v, self.ptr.add(self.len), 1);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:757:9\n    |\n757 |         std::mem::forget(v);\n    |         ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n757 -         std::mem::forget(v);\n757 +         mem::forget(v);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:766:13\n    |\n766 |             std::ptr::copy(v.as_ptr(), self.ptr.add(self.len), v.len());\n    |             ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n766 -             std::ptr::copy(v.as_ptr(), self.ptr.add(self.len), v.len());\n766 +             ptr::copy(v.as_ptr(), self.ptr.add(self.len), v.len());\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:831:17\n    |\n831 |                 std::ptr::copy(self.ptr, ptr, self.len);\n    |                 ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n831 -                 std::ptr::copy(self.ptr, ptr, self.len);\n831 +                 ptr::copy(self.ptr, ptr, self.len);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/memorypool.rs:845:9\n    |\n845 |         std::ptr::copy(c.as_ptr(), self.ptr.add(self.len), len);\n    |         ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::ptr;\n    |\nhelp: if you import `ptr`, refer to it directly\n    |\n845 -         std::ptr::copy(c.as_ptr(), self.ptr.add(self.len), len);\n845 +         ptr::copy(c.as_ptr(), self.ptr.add(self.len), len);\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n  --> src/raw_utils.rs:34:6\n   |\n34 | impl std::error::Error for EncodingError {\n   |      ^^^ use of undeclared crate or module `std`\n   |\nhelp: consider importing this module\n   |\n4  + use core::error;\n   |\nhelp: if you import `error`, refer to it directly\n   |\n34 - impl std::error::Error for EncodingError {\n34 + impl error::Error for EncodingError {\n   |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/raw_utils.rs:706:39\n    |\n706 |     pub fn with_uninit(data: &'a mut [std::mem::MaybeUninit<u8>]) -> Self {\n    |                                       ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n4   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n706 -     pub fn with_uninit(data: &'a mut [std::mem::MaybeUninit<u8>]) -> Self {\n706 +     pub fn with_uninit(data: &'a mut [mem::MaybeUninit<u8>]) -> Self {\n    |\n\nerror[E0412]: cannot find type `Vec` in this scope\n   --> src/raw_utils.rs:859:15\n    |\n859 |     pub data: Vec<u8>,\n    |               ^^^ not found in this scope\n    |\nhelp: consider importing one of these structs\n    |\n4   + use crate::Vec;\n    |\n4   + use alloc::vec::Vec;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared type `Vec`\n   --> src/raw_utils.rs:958:22\n    |\n958 |         Self { data: Vec::new(), }\n    |                      ^^^ use of undeclared type `Vec`\n    |\nhelp: consider importing one of these structs\n    |\n4   + use crate::Vec;\n    |\n4   + use alloc::vec::Vec;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared type `Vec`\n   --> src/raw_utils.rs:961:22\n    |\n961 |         Self { data: Vec::with_capacity(capacity), }\n    |                      ^^^ use of undeclared type `Vec`\n    |\nhelp: consider importing one of these structs\n    |\n4   + use crate::Vec;\n    |\n4   + use alloc::vec::Vec;\n    |\n\nerror[E0412]: cannot find type `Vec` in this scope\n   --> src/raw_utils.rs:966:27\n    |\n966 |     pub fn build(self) -> Vec<u8> {\n    |                           ^^^ not found in this scope\n    |\nhelp: consider importing one of these structs\n    |\n4   + use crate::Vec;\n    |\n4   + use alloc::vec::Vec;\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/stringparser.rs:267:29\n    |\n267 |     pub fn matched_parse<T: std::str::FromStr>(mut self, to: &mut T) -> Self {\n    |                             ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this builtin type\n    |\n1   + use core::primitive::str;\n    |\nhelp: if you import `str`, refer to it directly\n    |\n267 -     pub fn matched_parse<T: std::str::FromStr>(mut self, to: &mut T) -> Self {\n267 +     pub fn matched_parse<T: str::FromStr>(mut self, to: &mut T) -> Self {\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/lib.rs:916:27\n    |\n916 |     pub fn iter(&self) -> std::slice::Iter<'a, DecodedValue<'a>> {\n    |                           ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing one of these modules\n    |\n129 + use core::slice;\n    |\n129 + use alloc::slice;\n    |\nhelp: if you import `slice`, refer to it directly\n    |\n916 -     pub fn iter(&self) -> std::slice::Iter<'a, DecodedValue<'a>> {\n916 +     pub fn iter(&self) -> slice::Iter<'a, DecodedValue<'a>> {\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:1549:10\n     |\n1549 | impl<'a> std::ops::Deref for EncodedValueRef<'a> {\n     |          ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::ops;\n     |\nhelp: if you import `ops`, refer to it directly\n     |\n1549 - impl<'a> std::ops::Deref for EncodedValueRef<'a> {\n1549 + impl<'a> ops::Deref for EncodedValueRef<'a> {\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:1585:6\n     |\n1585 | impl std::ops::Deref for EncodedValueVec {\n     |      ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::ops;\n     |\nhelp: if you import `ops`, refer to it directly\n     |\n1585 - impl std::ops::Deref for EncodedValueVec {\n1585 + impl ops::Deref for EncodedValueVec {\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:1625:10\n     |\n1625 | impl<'a> std::ops::Deref for BytecodeRef<'a> {\n     |          ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::ops;\n     |\nhelp: if you import `ops`, refer to it directly\n     |\n1625 - impl<'a> std::ops::Deref for BytecodeRef<'a> {\n1625 + impl<'a> ops::Deref for BytecodeRef<'a> {\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:1662:6\n     |\n1662 | impl std::ops::Deref for BytecodeVec {\n     |      ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::ops;\n     |\nhelp: if you import `ops`, refer to it directly\n     |\n1662 - impl std::ops::Deref for BytecodeVec {\n1662 + impl ops::Deref for BytecodeVec {\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:2706:39\n     |\n2706 | ...                   let lhs = std::mem::take(&mut args[0]);\n     |                                 ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::mem;\n     |\nhelp: if you import `mem`, refer to it directly\n     |\n2706 -                             let lhs = std::mem::take(&mut args[0]);\n2706 +                             let lhs = mem::take(&mut args[0]);\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:2707:39\n     |\n2707 | ...                   let rhs = std::mem::take(&mut args[1]);\n     |                                 ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::mem;\n     |\nhelp: if you import `mem`, refer to it directly\n     |\n2707 -                             let rhs = std::mem::take(&mut args[1]);\n2707 +                             let rhs = mem::take(&mut args[1]);\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:3088:20\n     |\n3088 |             return std::mem::take(lhs);\n     |                    ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::mem;\n     |\nhelp: if you import `mem`, refer to it directly\n     |\n3088 -             return std::mem::take(lhs);\n3088 +             return mem::take(lhs);\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:3091:45\n     |\n3091 |         let accumulator = scope.move_object(std::mem::take(accumulator));\n     |                                             ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::mem;\n     |\nhelp: if you import `mem`, refer to it directly\n     |\n3091 -         let accumulator = scope.move_object(std::mem::take(accumulator));\n3091 +         let accumulator = scope.move_object(mem::take(accumulator));\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:3101:45\n     |\n3101 |         let accumulator = scope.move_object(std::mem::take(accumulator));\n     |                                             ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::mem;\n     |\nhelp: if you import `mem`, refer to it directly\n     |\n3101 -         let accumulator = scope.move_object(std::mem::take(accumulator));\n3101 +         let accumulator = scope.move_object(mem::take(accumulator));\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:4256:32\n     |\n4256 |                 arr_lhs.extend(std::mem::take(arr_rhs));\n     |                                ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::mem;\n     |\nhelp: if you import `mem`, refer to it directly\n     |\n4256 -                 arr_lhs.extend(std::mem::take(arr_rhs));\n4256 +                 arr_lhs.extend(mem::take(arr_rhs));\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:4257:47\n     |\n4257 |                 return Ok(DecodedValue::Array(std::mem::take(arr_lhs)));\n     |                                               ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::mem;\n     |\nhelp: if you import `mem`, refer to it directly\n     |\n4257 -                 return Ok(DecodedValue::Array(std::mem::take(arr_lhs)));\n4257 +                 return Ok(DecodedValue::Array(mem::take(arr_lhs)));\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:4589:8\n     |\n4589 |     T: std::ops::Deref<Target = [u8]>\n     |        ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::ops;\n     |\nhelp: if you import `ops`, refer to it directly\n     |\n4589 -     T: std::ops::Deref<Target = [u8]>\n4589 +     T: ops::Deref<Target = [u8]>\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:4604:8\n     |\n4604 |     T: std::ops::Deref<Target = [u8]>\n     |        ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::ops;\n     |\nhelp: if you import `ops`, refer to it directly\n     |\n4604 -     T: std::ops::Deref<Target = [u8]>\n4604 +     T: ops::Deref<Target = [u8]>\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:4649:8\n     |\n4649 |     T: std::ops::Deref<Target = [u8]>\n     |        ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::ops;\n     |\nhelp: if you import `ops`, refer to it directly\n     |\n4649 -     T: std::ops::Deref<Target = [u8]>\n4649 +     T: ops::Deref<Target = [u8]>\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:4669:8\n     |\n4669 |     T: std::ops::Deref<Target = [u8]>,\n     |        ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::ops;\n     |\nhelp: if you import `ops`, refer to it directly\n     |\n4669 -     T: std::ops::Deref<Target = [u8]>,\n4669 +     T: ops::Deref<Target = [u8]>,\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:5242:6\n     |\n5242 | impl std::fmt::Debug for ExpryType {\n     |      ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing one of these modules\n     |\n129  + use core::fmt;\n     |\n129  + use alloc::fmt;\n     |\nhelp: if you import `fmt`, refer to it directly\n     |\n5242 - impl std::fmt::Debug for ExpryType {\n5242 + impl fmt::Debug for ExpryType {\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:5787:24\n     |\n5787 |             lhs.extend(std::mem::take(rhs));\n     |                        ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::mem;\n     |\nhelp: if you import `mem`, refer to it directly\n     |\n5787 -             lhs.extend(std::mem::take(rhs));\n5787 +             lhs.extend(mem::take(rhs));\n     |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n    --> src/lib.rs:5788:46\n     |\n5788 |             return Ok(ExpryType::StaticArray(std::mem::take(lhs)));\n     |                                              ^^^ use of undeclared crate or module `std`\n     |\nhelp: consider importing this module\n     |\n129  + use core::mem;\n     |\nhelp: if you import `mem`, refer to it directly\n     |\n5788 -             return Ok(ExpryType::StaticArray(std::mem::take(lhs)));\n5788 +             return Ok(ExpryType::StaticArray(mem::take(lhs)));\n     |\n\nwarning: crate-level attribute should be in the root module\n --> src/raw_utils.rs:2:35\n  |\n2 | #![cfg_attr(not(feature = \"std\"), no_std)]\n  |                                   ^^^^^^\n  |\n  = note: `#[warn(unused_attributes)]` on by default\n\nwarning: crate-level attribute should be in the root module\n --> src/parser.rs:2:35\n  |\n2 | #![cfg_attr(not(feature = \"std\"), no_std)]\n  |                                   ^^^^^^\n\nerror[E0599]: no variant named `Target` found for enum `SmallVector<T, N>`\n   --> src/lib.rs:802:31\n    |\n766 | enum SmallVector<T, const N: usize> {\n    | ----------------------------------- variant `Target` not found here\n...\n802 |     fn deref(&self) -> &Self::Target {\n    |                               ^^^^^^ variant not found in `SmallVector<T, N>`\n\nerror[E0599]: no variant named `Target` found for enum `SmallVector<T, N>`\n   --> src/lib.rs:808:43\n    |\n766 | enum SmallVector<T, const N: usize> {\n    | ----------------------------------- variant `Target` not found here\n...\n808 |     fn deref_mut(&mut self) -> &mut Self::Target {\n    |                                           ^^^^^^ variant not found in `SmallVector<T, N>`\n\nerror[E0223]: ambiguous associated type\n    --> src/lib.rs:1552:28\n     |\n1552 |     fn deref(&self) -> &'a Self::Target {\n     |                            ^^^^^^^^^^^^\n     |\nhelp: if there were a trait named `Example` with associated type `Target` implemented for `EncodedValueRef<'a>`, you could use the fully-qualified path\n     |\n1552 |     fn deref(&self) -> &'a <EncodedValueRef<'a> as Example>::Target {\n     |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0223]: ambiguous associated type\n    --> src/lib.rs:1628:28\n     |\n1628 |     fn deref(&self) -> &'a Self::Target {\n     |                            ^^^^^^^^^^^^\n     |\nhelp: if there were a trait named `Example` with associated type `Target` implemented for `BytecodeRef<'a>`, you could use the fully-qualified path\n     |\n1628 |     fn deref(&self) -> &'a <BytecodeRef<'a> as Example>::Target {\n     |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSome errors have detailed explanations: E0223, E0412, E0433, E0599.\nFor more information about an error, try `rustc --explain E0223`.\nwarning: `expry` (lib) generated 2 warnings\nerror: could not compile `expry` (lib) due to 85 previous errors; 2 warnings emitted\n",
      "stdout": ""
    },
    "features": [
      "std"
    ],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/expry-0.3.0/src",
    "time_to_build": 2298,
    "time_to_solve": 588
  }
]