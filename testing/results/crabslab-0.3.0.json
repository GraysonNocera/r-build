[
  {
    "built_with_features": null,
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features"
      ],
      "code": 101,
      "stderr": "   Compiling syn v2.0.90\n   Compiling crabslab-derive v0.3.0\n   Compiling crabslab v0.3.0 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/crabslab-0.3.0)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7m-none-eabi` target may not support the standard library\n  = note: `std` is required by `crabslab` because it does not declare `#![no_std]`\n\nerror: cannot find macro `include_str` in this scope\n --> src/lib.rs:3:10\n  |\n3 | #![doc = include_str!(\"../README.md\")]\n  |          ^^^^^^^^^^^\n  |\nhelp: consider importing this macro\n  |\n6 + use core::include_str;\n  |\n\nerror: cannot find attribute `derive` in this scope\n --> src/array.rs:7:3\n  |\n7 | #[derive(Clone, Copy)]\n  |   ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n2 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n  --> src/id.rs:11:3\n   |\n11 | #[derive(SlabItem)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror[E0405]: cannot find trait `Iterator` in this scope\n  --> src/array.rs:13:19\n   |\n13 | impl<T: SlabItem> Iterator for ArrayIter<T> {\n   |                   ^^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::iter::Iterator;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> src/array.rs:16:27\n   |\n16 |     fn next(&mut self) -> Option<Self::Item> {\n   |                           ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n2  + use core::option::Option;\n   |\n\nerror[E0425]: cannot find value `None` in this scope\n  --> src/array.rs:18:13\n   |\n18 |             None\n   |             ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n2  + use core::option::Option::None;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> src/array.rs:22:13\n   |\n22 |             Some(id)\n   |             ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n2  + use core::option::Option::Some;\n   |\n\nerror[E0405]: cannot find trait `Clone` in this scope\n  --> src/array.rs:49:9\n   |\n49 | impl<T> Clone for Array<T> {\n   |         ^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::clone::Clone;\n   |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> src/array.rs:59:9\n   |\n59 | impl<T> Copy for Array<T> {}\n   |         ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::marker::Copy;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> src/array.rs:62:9\n   |\n62 | impl<T> From<Id<T>> for Array<T> {\n   |         ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `PartialEq` in this scope\n  --> src/array.rs:90:9\n   |\n90 | impl<T> PartialEq for Array<T> {\n   |         ^^^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::cmp::PartialEq;\n   |\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> src/array.rs:118:19\n    |\n118 | impl<T: SlabItem> Default for Array<T> {\n    |                   ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n2   + use core::default::Default;\n    |\n\nerror[E0405]: cannot find trait `PartialOrd` in this scope\n  --> src/id.rs:14:9\n   |\n14 | impl<T> PartialOrd for Id<T> {\n   |         ^^^^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::cmp::PartialOrd;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> src/id.rs:15:44\n   |\n15 |     fn partial_cmp(&self, other: &Self) -> Option<core::cmp::Ordering> {\n   |                                            ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n2  + use core::option::Option;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> src/id.rs:16:9\n   |\n16 |         Some(self.0.cmp(&other.0))\n   |         ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n2  + use core::option::Option::Some;\n   |\n\nerror[E0405]: cannot find trait `Ord` in this scope\n  --> src/id.rs:20:9\n   |\n20 | impl<T> Ord for Id<T> {\n   |         ^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::cmp::Ord;\n   |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> src/id.rs:26:9\n   |\n26 | impl<T> Copy for Id<T> {}\n   |         ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::marker::Copy;\n   |\n\nerror[E0405]: cannot find trait `Clone` in this scope\n  --> src/id.rs:28:9\n   |\n28 | impl<T> Clone for Id<T> {\n   |         ^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::clone::Clone;\n   |\n\nerror[E0405]: cannot find trait `PartialEq` in this scope\n  --> src/id.rs:40:9\n   |\n40 | impl<T> PartialEq for Id<T> {\n   |         ^^^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::cmp::PartialEq;\n   |\n\nerror[E0405]: cannot find trait `Eq` in this scope\n  --> src/id.rs:46:9\n   |\n46 | impl<T> Eq for Id<T> {}\n   |         ^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::cmp::Eq;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> src/id.rs:48:9\n   |\n48 | impl<T> From<Id<T>> for u32 {\n   |         ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> src/id.rs:54:9\n   |\n54 | impl<T> From<usize> for Id<T> {\n   |         ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> src/id.rs:60:9\n   |\n60 | impl<T> From<u32> for Id<T> {\n   |         ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `Default` in this scope\n  --> src/id.rs:67:9\n   |\n67 | impl<T> Default for Id<T> {\n   |         ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::default::Default;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> src/id.rs:236:12\n    |\n236 | impl<F, T> From<Offset<F, T>> for Id<F> {\n    |            ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n2   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Sized` in this scope\n  --> src/slab.rs:12:38\n   |\n12 | pub trait SlabItem: core::any::Any + Sized {\n   |                                      ^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n2  + use core::marker::Sized;\n   |\n\nerror[E0412]: cannot find type `Vec` in this scope\n  --> src/slab.rs:45:81\n   |\n45 |     fn read_vec<T: SlabItem + Default>(&self, array: crate::array::Array<T>) -> Vec<T> {\n   |                                                                                 ^^^ not found in this scope\n\nerror[E0412]: cannot find type `Vec` in this scope\n   --> src/slab.rs:110:15\n    |\n110 | impl Slab for Vec<u32> {\n    |               ^^^ not found in this scope\n\nerror[E0405]: cannot find trait `AsRef` in this scope\n   --> src/slab.rs:221:9\n    |\n221 | impl<B> AsRef<B> for CpuSlab<B> {\n    |         ^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n2   + use core::convert::AsRef;\n    |\n\nerror[E0405]: cannot find trait `AsMut` in this scope\n   --> src/slab.rs:227:9\n    |\n227 | impl<B> AsMut<B> for CpuSlab<B> {\n    |         ^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n2   + use core::convert::AsMut;\n    |\n\nerror[E0412]: cannot find type `Vec` in this scope\n   --> src/slab.rs:278:23\n    |\n278 | impl GrowableSlab for Vec<u32> {\n    |                       ^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n --> src/impl_slab_item/mod.rs:9:42\n  |\n9 | impl<T: SlabItem + Default> SlabItem for Option<T> {\n  |                                          ^^^^^^ not found in this scope\n  |\nhelp: consider importing this enum\n  |\n7 + use core::option::Option;\n  |\n\nerror[E0405]: cannot find trait `Default` in this scope\n --> src/impl_slab_item/mod.rs:9:20\n  |\n9 | impl<T: SlabItem + Default> SlabItem for Option<T> {\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this trait\n  |\n7 + use core::default::Default;\n  |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> src/impl_slab_item/mod.rs:18:13\n   |\n18 |             Some(t)\n   |             ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n7  + use core::option::Option::Some;\n   |\n\nerror[E0425]: cannot find value `None` in this scope\n  --> src/impl_slab_item/mod.rs:20:13\n   |\n20 |             None\n   |             ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n7  + use core::option::Option::None;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> src/impl_slab_item/mod.rs:25:16\n   |\n25 |         if let Some(t) = self {\n   |                ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n7  + use core::option::Option::Some;\n   |\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> src/impl_slab_item/mod.rs:35:20\n   |\n35 | impl<T: SlabItem + Copy + Default, const N: usize> SlabItem for [T; N] {\n   |                    ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n7  + use core::marker::Copy;\n   |\n\nerror[E0405]: cannot find trait `Default` in this scope\n  --> src/impl_slab_item/mod.rs:35:27\n   |\n35 | impl<T: SlabItem + Copy + Default, const N: usize> SlabItem for [T; N] {\n   |                           ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n7  + use core::default::Default;\n   |\n\nwarning: unexpected `cfg` condition value: `spirv`\n --> src/lib.rs:1:13\n  |\n1 | #![cfg_attr(target_arch = \"spirv\", no_std)]\n  |             ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: expected values for `target_arch` are: `aarch64`, `arm`, `arm64ec`, `avr`, `bpf`, `csky`, `hexagon`, `loongarch64`, `m68k`, `mips`, `mips32r6`, `mips64`, `mips64r6`, `msp430`, `nvptx64`, `powerpc`, `powerpc64`, `riscv32`, `riscv64`, `s390x`, `sparc`, `sparc64`, `wasm32`, `wasm64`, `x86`, `x86_64`, and `xtensa`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n  = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition value: `spirv`\n  --> src/lib.rs:23:11\n   |\n23 | #[cfg(not(target_arch = \"spirv\"))]\n   |           ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `target_arch` are: `aarch64`, `arm`, `arm64ec`, `avr`, `bpf`, `csky`, `hexagon`, `loongarch64`, `m68k`, `mips`, `mips32r6`, `mips64`, `mips64r6`, `msp430`, `nvptx64`, `powerpc`, `powerpc64`, `riscv32`, `riscv64`, `s390x`, `sparc`, `sparc64`, `wasm32`, `wasm64`, `x86`, `x86_64`, and `xtensa`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `spirv`\n  --> src/lib.rs:31:7\n   |\n31 | #[cfg(target_arch = \"spirv\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `target_arch` are: `aarch64`, `arm`, `arm64ec`, `avr`, `bpf`, `csky`, `hexagon`, `loongarch64`, `m68k`, `mips`, `mips32r6`, `mips64`, `mips64r6`, `msp430`, `nvptx64`, `powerpc`, `powerpc64`, `riscv32`, `riscv64`, `s390x`, `sparc`, `sparc64`, `wasm32`, `wasm64`, `x86`, `x86_64`, and `xtensa`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `spirv`\n   --> src/array.rs:187:15\n    |\n187 |     #[cfg(not(target_arch = \"spirv\"))]\n    |               ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `target_arch` are: `aarch64`, `arm`, `arm64ec`, `avr`, `bpf`, `csky`, `hexagon`, `loongarch64`, `m68k`, `mips`, `mips32r6`, `mips64`, `mips64r6`, `msp430`, `nvptx64`, `powerpc`, `powerpc64`, `riscv32`, `riscv64`, `s390x`, `sparc`, `sparc64`, `wasm32`, `wasm64`, `x86`, `x86_64`, and `xtensa`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unused imports: `self as crabslab` and `slab::SlabItem`\n --> src/id.rs:4:13\n  |\n4 | use crate::{self as crabslab, slab::SlabItem};\n  |             ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\nwarning: unexpected `cfg` condition value: `spirv`\n   --> src/slab.rs:109:11\n    |\n109 | #[cfg(not(target_arch = \"spirv\"))]\n    |           ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `target_arch` are: `aarch64`, `arm`, `arm64ec`, `avr`, `bpf`, `csky`, `hexagon`, `loongarch64`, `m68k`, `mips`, `mips32r6`, `mips64`, `mips64r6`, `msp430`, `nvptx64`, `powerpc`, `powerpc64`, `riscv32`, `riscv64`, `s390x`, `sparc`, `sparc64`, `wasm32`, `wasm64`, `x86`, `x86_64`, and `xtensa`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `spirv`\n   --> src/slab.rs:277:11\n    |\n277 | #[cfg(not(target_arch = \"spirv\"))]\n    |           ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `target_arch` are: `aarch64`, `arm`, `arm64ec`, `avr`, `bpf`, `csky`, `hexagon`, `loongarch64`, `m68k`, `mips`, `mips32r6`, `mips64`, `mips64r6`, `msp430`, `nvptx64`, `powerpc`, `powerpc64`, `riscv32`, `riscv64`, `s390x`, `sparc`, `sparc64`, `wasm32`, `wasm64`, `x86`, `x86_64`, and `xtensa`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `spirv`\n  --> src/slab.rs:44:15\n   |\n44 |     #[cfg(not(target_arch = \"spirv\"))]\n   |               ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `target_arch` are: `aarch64`, `arm`, `arm64ec`, `avr`, `bpf`, `csky`, `hexagon`, `loongarch64`, `m68k`, `mips`, `mips32r6`, `mips64`, `mips64r6`, `msp430`, `nvptx64`, `powerpc`, `powerpc64`, `riscv32`, `riscv64`, `s390x`, `sparc`, `sparc64`, `wasm32`, `wasm64`, `x86`, `x86_64`, and `xtensa`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nerror[E0433]: failed to resolve: use of undeclared type `Vec`\n  --> src/slab.rs:46:23\n   |\n46 |         let mut vec = Vec::with_capacity(array.len());\n   |                       ^^^ use of undeclared type `Vec`\n\nerror[E0433]: failed to resolve: use of undeclared type `Vec`\n   --> src/slab.rs:280:9\n    |\n280 |         Vec::capacity(self)\n    |         ^^^ use of undeclared type `Vec`\n\nerror[E0433]: failed to resolve: use of undeclared type `Vec`\n   --> src/slab.rs:284:9\n    |\n284 |         Vec::reserve(self, capacity - self.capacity());\n    |         ^^^ use of undeclared type `Vec`\n\nSome errors have detailed explanations: E0405, E0412, E0425, E0433, E0463, E0531.\nFor more information about an error, try `rustc --explain E0405`.\nwarning: `crabslab` (lib) generated 8 warnings\nerror: could not compile `crabslab` (lib) due to 42 previous errors; 8 warnings emitted\n",
      "stdout": ""
    },
    "features": [],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/crabslab-0.3.0/src",
    "time_to_build": 2138,
    "time_to_solve": 76
  }
]