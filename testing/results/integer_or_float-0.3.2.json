[
  {
    "built_with_features": null,
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features"
      ],
      "code": 101,
      "stderr": "   Compiling integer_or_float v0.3.2 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/integer_or_float-0.3.2)\n   Compiling derive_more v0.99.18\nwarning: unexpected `cfg` condition value: `no_std`\n  --> build.rs:18:26\n   |\n18 |             if #[cfg(all(feature = \"no_std\", not(feature = \"ignore_no_std_tests_check\")))] {\n   |                          ^^^^^^^^^^^^^^^^^^\n...\n30 |     panic_if_no_std_and_compiling_tests!();\n   |     -------------------------------------- in this macro invocation\n   |\n   = note: expected values for `feature` are: `default`, `faster-strconv`, `fat`, `float-cmp`, `hash`, `ignore_no_std_tests_check`, `log`, `more-serde`, `num-traits`, `numerical-traits`, `ryu`, `serde`, and `x64-backing-store`\n   = help: consider adding `no_std` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n   = note: this warning originates in the macro `panic_if_no_std_and_compiling_tests` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unexpected `cfg` condition value: `no_std`\n  --> build.rs:31:13\n   |\n31 |     if cfg!(feature = \"no_std\") {\n   |             ^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `default`, `faster-strconv`, `fat`, `float-cmp`, `hash`, `ignore_no_std_tests_check`, `log`, `more-serde`, `num-traits`, `numerical-traits`, `ryu`, `serde`, and `x64-backing-store`\n   = help: consider adding `no_std` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: `integer_or_float` (build script) generated 2 warnings\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7m-none-eabi` target may not support the standard library\n  = note: `std` is required by `integer_or_float` because it does not declare `#![no_std]`\n\nerror[E0463]: can't find crate for `std`\n --> src/error/str_conv.rs:5:5\n  |\n5 | use std::error::Error;\n  |     ^^^ can't find crate\n  |\n  = note: the `thumbv7m-none-eabi` target may not support the standard library\n\nerror: cannot find macro `include_str` in this scope\n --> src/lib.rs:1:10\n  |\n1 | #![doc = include_str!(\"../README.md\")]\n  |          ^^^^^^^^^^^\n  |\nhelp: consider importing this macro\n  |\n11+ use core::include_str;\n  |\n\nerror: cannot find macro `panic` in this scope\n  --> src/cmp/mod.rs:30:23\n   |\n30 |             Err(i) => panic!(\"IntegerOrFloat was holding integer {}, not a float!\", i),\n   |                       ^^^^^\n   |\nhelp: consider importing this macro\n   |\n4  + use core::panic;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> src/cmp/mod.rs:38:23\n   |\n38 |             Err(f) => panic!(\"IntegerOrFloat was holding float {}, not an integer!\", f),\n   |                       ^^^^^\n   |\nhelp: consider importing this macro\n   |\n4  + use core::panic;\n   |\n\nerror: cannot find macro `format_args` in this scope\n  --> src/str_conv/mod.rs:39:61\n   |\n39 |             IntegerOrFloat::Float(f) => formatter.write_fmt(format_args!(\"Float({})\", f)),\n   |                                                             ^^^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::format_args;\n   |\n\nerror: cannot find macro `format_args` in this scope\n  --> src/str_conv/mod.rs:40:63\n   |\n40 |             IntegerOrFloat::Integer(i) => formatter.write_fmt(format_args!(\"Integer({})\", i)),\n   |                                                               ^^^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::format_args;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> src/error/str_conv.rs:12:3\n   |\n12 | #[derive(Debug, Default, Copy, Clone, PartialEq, Eq)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `default` in this scope\n  --> src/error/str_conv.rs:16:7\n   |\n16 |     #[default]\n   |       ^^^^^^^\n   |\nhelp: consider adding a derive\n   |\n13 + #[derive(Default)]\n14 | pub enum IofParseFloatError {\n   |\n\nerror: cannot find macro `write` in this scope\n  --> src/error/str_conv.rs:24:28\n   |\n24 |             Self::Empty => write!(f, \"cannot parse float from empty string\"),\n   |                            ^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::write;\n   |\n\nerror: cannot find macro `write` in this scope\n  --> src/error/str_conv.rs:25:30\n   |\n25 |             Self::Invalid => write!(f, \"invalid float literal\")\n   |                              ^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::write;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> src/error/str_conv.rs:32:11\n    |\n32  |         #[derive(Debug)]\n    |           ^^^^^^\n...\n118 | float_conversion_define_enum!(fmt::Debug + Into<core::num::ParseFloatError> + From<core::num::ParseFloatError>);\n    | --------------------------------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `float_conversion_define_enum` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `write` in this scope\n   --> src/error/str_conv.rs:68:50\n    |\n68  |                     IntegerConversionError(e) => write!(f, \"String not an integer: {:?}\", e),\n    |                                                  ^^^^^\n...\n118 | float_conversion_define_enum!(fmt::Debug + Into<core::num::ParseFloatError> + From<core::num::ParseFloatError>);\n    | --------------------------------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `float_conversion_display_error` which comes from the expansion of the macro `float_conversion_define_enum` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n    |\n1   + use core::write;\n    |\n\nerror: cannot find macro `write` in this scope\n   --> src/error/str_conv.rs:69:48\n    |\n69  |                     FloatConversionError(e) => write!(f, \"String not a floating point number: {:?}\", e),\n    |                                                ^^^^^\n...\n118 | float_conversion_define_enum!(fmt::Debug + Into<core::num::ParseFloatError> + From<core::num::ParseFloatError>);\n    | --------------------------------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `float_conversion_display_error` which comes from the expansion of the macro `float_conversion_define_enum` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n    |\n1   + use core::write;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> src/error/str_conv.rs:125:3\n    |\n125 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> src/error/str_conv.rs:129:5\n    |\n129 |     assert_eq!(IofParseFloatError::Invalid, invalid.into());\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert_eq;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> src/error/str_conv.rs:130:5\n    |\n130 |     assert_eq!(IofParseFloatError::Empty, empty.into());\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert_eq;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> src/lib.rs:30:3\n   |\n30 | #[derive(Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n11 + use core::prelude::rust_2024::derive;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> src/impl_from.rs:15:14\n   |\n15 |         impl From<IntegerOrFloat> for $primitive {\n   |              ^^^^ not found in this scope\n...\n76 | impl_from_iof_for_primitives_all!(i8, i16, i32, i64, isize);\n   | ----------------------------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `impl_from_iof_for_primitive` which comes from the expansion of the macro `impl_from_iof_for_primitives_all` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this trait\n   |\n3  + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> src/impl_from.rs:15:14\n   |\n15 |         impl From<IntegerOrFloat> for $primitive {\n   |              ^^^^ not found in this scope\n...\n77 | impl_from_iof_for_primitives_all!(u8, u16, u32, u64, usize);\n   | ----------------------------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `impl_from_iof_for_primitive` which comes from the expansion of the macro `impl_from_iof_for_primitives_all` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this trait\n   |\n3  + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> src/impl_from.rs:15:14\n   |\n15 |         impl From<IntegerOrFloat> for $primitive {\n   |              ^^^^ not found in this scope\n...\n78 | impl_from_iof_for_primitives_all!(f32, f64);\n   | ------------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `impl_from_iof_for_primitive` which comes from the expansion of the macro `impl_from_iof_for_primitives_all` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this trait\n   |\n3  + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> src/impl_from.rs:38:14\n   |\n38 |         impl From<$integer_type> for IntegerOrFloat {\n   |              ^^^^ not found in this scope\n...\n79 | impl_from_integer_for_iof_all!(i8, i16, i32, i64, isize, u8, u16, u32, u64, usize);\n   | ---------------------------------------------------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `impl_from_integer_for_iof` which comes from the expansion of the macro `impl_from_integer_for_iof_all` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this trait\n   |\n3  + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> src/impl_from.rs:58:14\n   |\n58 |         impl From<$integer_type> for IntegerOrFloat {\n   |              ^^^^ not found in this scope\n...\n80 | impl_from_float_for_iof_all!(f32, f64);\n   | -------------------------------------- in this macro invocation\n   |\n   = note: this error originates in the macro `impl_from_float_for_iof` which comes from the expansion of the macro `impl_from_float_for_iof_all` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this trait\n   |\n3  + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `Default` in this scope\n --> src/impl_misc.rs:5:6\n  |\n5 | impl Default for IntegerOrFloat {\n  |      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this trait\n  |\n1 + use core::default::Default;\n  |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> src/cmp/mod.rs:11:38\n   |\n11 |     pub fn holding_integer(&self) -> Result<i_iof, f_iof> {\n   |                                      ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n4  + use core::fmt::Result;\n   |\n4  + use core::result::Result;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:13:27\n   |\n13 |             Integer(i) => Ok(*i),\n   |                           ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:14:25\n   |\n14 |             Float(f) => Err(*f),\n   |                         ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> src/cmp/mod.rs:19:36\n   |\n19 |     pub fn holding_float(&self) -> Result<f_iof, i_iof> {\n   |                                    ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n4  + use core::fmt::Result;\n   |\n4  + use core::result::Result;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:21:27\n   |\n21 |             Integer(i) => Err(*i),\n   |                           ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:22:25\n   |\n22 |             Float(f) => Ok(*f),\n   |                         ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:29:13\n   |\n29 |             Ok(f) => f,\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:30:13\n   |\n30 |             Err(i) => panic!(\"IntegerOrFloat was holding integer {}, not a float!\", i),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:37:13\n   |\n37 |             Ok(i) => i,\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:38:13\n   |\n38 |             Err(f) => panic!(\"IntegerOrFloat was holding float {}, not an integer!\", f),\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0405]: cannot find trait `PartialEq` in this scope\n  --> src/cmp/mod.rs:43:6\n   |\n43 | impl PartialEq<IntegerOrFloat> for IntegerOrFloat {\n   |      ^^^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n4  + use core::cmp::PartialEq;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:46:14\n   |\n46 |             (Ok(i1), Ok(i2)) => i1 == i2,\n   |              ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:46:22\n   |\n46 |             (Ok(i1), Ok(i2)) => i1 == i2,\n   |                      ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:47:14\n   |\n47 |             (Err(f1), Err(f2)) => f1 == f2,\n   |              ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:47:23\n   |\n47 |             (Err(f1), Err(f2)) => f1 == f2,\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:48:14\n   |\n48 |             (Ok(i), Err(f)) | (Err(f), Ok(i)) => i as f_iof == f,\n   |              ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:48:21\n   |\n48 |             (Ok(i), Err(f)) | (Err(f), Ok(i)) => i as f_iof == f,\n   |                     ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:48:32\n   |\n48 |             (Ok(i), Err(f)) | (Err(f), Ok(i)) => i as f_iof == f,\n   |                                ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:48:40\n   |\n48 |             (Ok(i), Err(f)) | (Err(f), Ok(i)) => i as f_iof == f,\n   |                                        ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0405]: cannot find trait `PartialOrd` in this scope\n  --> src/cmp/mod.rs:53:6\n   |\n53 | impl PartialOrd<IntegerOrFloat> for IntegerOrFloat {\n   |      ^^^^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n4  + use core::cmp::PartialOrd;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> src/cmp/mod.rs:54:44\n   |\n54 |     fn partial_cmp(&self, other: &Self) -> Option<Ordering> {\n   |                                            ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n4  + use core::option::Option;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:56:14\n   |\n56 |             (Ok(i1), Ok(i2)) => i1.partial_cmp(&i2),\n   |              ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:56:22\n   |\n56 |             (Ok(i1), Ok(i2)) => i1.partial_cmp(&i2),\n   |                      ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:57:14\n   |\n57 |             (Err(f1), Err(f2)) => f1.partial_cmp(&f2),\n   |              ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:57:23\n   |\n57 |             (Err(f1), Err(f2)) => f1.partial_cmp(&f2),\n   |                       ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:58:14\n   |\n58 |             (Ok(i), Err(f)) | (Err(f), Ok(i)) => (i as f_iof).partial_cmp(&f),\n   |              ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:58:21\n   |\n58 |             (Ok(i), Err(f)) | (Err(f), Ok(i)) => (i as f_iof).partial_cmp(&f),\n   |                     ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/cmp/mod.rs:58:32\n   |\n58 |             (Ok(i), Err(f)) | (Err(f), Ok(i)) => (i as f_iof).partial_cmp(&f),\n   |                                ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Err;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/cmp/mod.rs:58:40\n   |\n58 |             (Ok(i), Err(f)) | (Err(f), Ok(i)) => (i as f_iof).partial_cmp(&f),\n   |                                        ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n4  + use core::result::Result::Ok;\n   |\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/str_conv/ryu.rs:19:39\n   |\n19 | pub(crate) fn _maybe_ryu(f: f_iof) -> String {\n   |                                       ^^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> src/str_conv/mod.rs:16:6\n   |\n16 | impl From<IntegerOrFloat> for String {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::convert::From;\n   |\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/str_conv/mod.rs:16:31\n   |\n16 | impl From<IntegerOrFloat> for String {\n   |                               ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> src/str_conv/mod.rs:28:58\n   |\n28 |     fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {\n   |                                                          ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  + use crate::str_conv::fmt::Result;\n   |\n1  + use core::fmt::Result;\n   |\n1  + use core::result::Result;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> src/str_conv/mod.rs:37:58\n   |\n37 |     fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {\n   |                                                          ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  + use crate::str_conv::fmt::Result;\n   |\n1  + use core::fmt::Result;\n   |\n1  + use core::result::Result;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> src/str_conv/mod.rs:48:29\n   |\n48 |     fn try_from(s: &str) -> Result<Self, Self::Error> {\n   |                             ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  + use crate::str_conv::fmt::Result;\n   |\n1  + use core::fmt::Result;\n   |\n1  + use core::result::Result;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/str_conv/mod.rs:50:13\n   |\n50 |             Ok(i) => Ok(Integer(i)),\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Ok;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> src/str_conv/mod.rs:50:22\n   |\n50 |             Ok(i) => Ok(Integer(i)),\n   |                      ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/str_conv/mod.rs:51:13\n   |\n51 |             Err(ice) => {\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Err;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> src/str_conv/mod.rs:53:21\n   |\n53 |                     Ok(f) => Ok(Float(f)),\n   |                     ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Ok;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> src/str_conv/mod.rs:53:30\n   |\n53 |                     Ok(f) => Ok(Float(f)),\n   |                              ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> src/str_conv/mod.rs:54:21\n   |\n54 |                     Err(fce) => Err(ConversionError::kind_for_string(s, ice, fce))\n   |                     ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Err;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n  --> src/str_conv/mod.rs:54:33\n   |\n54 |                     Err(fce) => Err(ConversionError::kind_for_string(s, ice, fce))\n   |                                 ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n1  + use core::result::Result::Err;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> src/str_conv/mod.rs:75:29\n   |\n75 |     fn from_str(s: &str) -> Result<Self, Self::Err> {\n   |                             ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  + use crate::str_conv::fmt::Result;\n   |\n1  + use core::fmt::Result;\n   |\n1  + use core::result::Result;\n   |\n\nerror[E0405]: cannot find trait `Into` in this scope\n   --> src/error/str_conv.rs:118:44\n    |\n118 | float_conversion_define_enum!(fmt::Debug + Into<core::num::ParseFloatError> + From<core::num::ParseFloatError>);\n    |                                            ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::Into;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> src/error/str_conv.rs:118:79\n    |\n118 | float_conversion_define_enum!(fmt::Debug + Into<core::num::ParseFloatError> + From<core::num::ParseFloatError>);\n    |                                                                               ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> src/error/str_conv.rs:81:14\n    |\n81  |         impl From<$($ty)*> for IofParseFloatError {\n    |              ^^^^ not found in this scope\n...\n118 | float_conversion_define_enum!(fmt::Debug + Into<core::num::ParseFloatError> + From<core::num::ParseFloatError>);\n    | --------------------------------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `impl_from_pfe` which comes from the expansion of the macro `float_conversion_define_enum` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `AsRef` in this scope\n   --> src/error/str_conv.rs:96:51\n    |\n96  |             pub(crate) fn kind_for_string(s: impl AsRef<str>, ice: ParseIntError, fce: T) -> Self {\n    |                                                   ^^^^^ not found in this scope\n...\n118 | float_conversion_define_enum!(fmt::Debug + Into<core::num::ParseFloatError> + From<core::num::ParseFloatError>);\n    | --------------------------------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `float_conversion_kind_for_string` which comes from the expansion of the macro `float_conversion_define_enum` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this trait\n    |\n1   + use core::convert::AsRef;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> src/error/str_conv.rs:108:17\n    |\n108 |         impl<T> From<$pf> for ConversionError<T> where T: $($ty)* {\n    |                 ^^^^ not found in this scope\n...\n118 | float_conversion_define_enum!(fmt::Debug + Into<core::num::ParseFloatError> + From<core::num::ParseFloatError>);\n    | --------------------------------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `float_conversion_error_conversion` which comes from the expansion of the macro `float_conversion_define_enum` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> src/error/str_conv.rs:119:9\n    |\n119 | impl<T> From<core::num::ParseIntError> for ConversionError<T> where T: fmt::Debug + Into<core::num::ParseFloatError> + From<core::num::Pa...\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Into` in this scope\n   --> src/error/str_conv.rs:119:85\n    |\n119 | impl<T> From<core::num::ParseIntError> for ConversionError<T> where T: fmt::Debug + Into<core::num::ParseFloatError> + From<core::num::Pa...\n    |                                                                                     ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::Into;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> src/error/str_conv.rs:119:120\n    |\n119 | ...e T: fmt::Debug + Into<core::num::ParseFloatError> + From<core::num::ParseFloatError> {\n    |                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nwarning: unexpected `cfg` condition name: `no_std`\n --> src/lib.rs:3:13\n  |\n3 | #![cfg_attr(no_std, no_std)]\n  |             ^^^^^^\n  |\n  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(no_std)'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(no_std)\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n  = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `with_impl_hash`\n  --> src/lib.rs:13:7\n   |\n13 | #[cfg(with_impl_hash)]\n   |       ^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(with_impl_hash)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(with_impl_hash)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `std`\n  --> src/str_conv/mod.rs:15:7\n   |\n15 | #[cfg(std)]\n   |       ^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(std)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(std)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `features`\n --> src/str_conv/ryu.rs:3:7\n  |\n3 | #[cfg(features = \"faster-strconv\")]\n  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nhelp: there is a config with a similar name and value\n  |\n3 | #[cfg(feature = \"faster-strconv\")]\n  |       ~~~~~~~\n\nwarning: unexpected `cfg` condition name: `features`\n  --> src/str_conv/ryu.rs:17:11\n   |\n17 | #[cfg(not(features = \"faster-strconv\"))]\n   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nhelp: there is a config with a similar name and value\n   |\n17 | #[cfg(not(feature = \"faster-strconv\"))]\n   |           ~~~~~~~\n\nwarning: unexpected `cfg` condition name: `features`\n  --> src/str_conv/ryu.rs:23:7\n   |\n23 | #[cfg(features = \"faster-strconv\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nhelp: there is a config with a similar name and value\n   |\n23 | #[cfg(feature = \"faster-strconv\")]\n   |       ~~~~~~~\n\nwarning: unexpected `cfg` condition name: `features`\n  --> src/str_conv/ryu.rs:32:11\n   |\n32 | #[cfg(not(features = \"faster-strconv\"))]\n   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nhelp: there is a config with a similar name and value\n   |\n32 | #[cfg(not(feature = \"faster-strconv\"))]\n   |           ~~~~~~~\n\nwarning: unexpected `cfg` condition name: `std`\n --> src/error/str_conv.rs:4:7\n  |\n4 | #[cfg(std)]\n  |       ^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(std)'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(std)\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `no_std`\n --> src/error/str_conv.rs:6:7\n  |\n6 | #[cfg(no_std)]\n  |       ^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(no_std)'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(no_std)\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nSome errors have detailed explanations: E0405, E0412, E0425, E0463, E0531.\nFor more information about an error, try `rustc --explain E0405`.\nwarning: `integer_or_float` (lib) generated 9 warnings\nerror: could not compile `integer_or_float` (lib) due to 94 previous errors; 9 warnings emitted\n",
      "stdout": ""
    },
    "features": [],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/integer_or_float-0.3.2/src",
    "time_to_build": 2705,
    "time_to_solve": 39
  }
]