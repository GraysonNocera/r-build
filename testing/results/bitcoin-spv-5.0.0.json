[
  {
    "built_with_features": "none",
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features"
      ],
      "code": 0,
      "stderr": "   Compiling byteorder v1.5.0\n   Compiling crunchy v0.2.2\n   Compiling rustc-hex v2.1.0\n   Compiling fixed-hash v0.6.1\n   Compiling digest v0.8.1\n   Compiling block-buffer v0.7.3\n   Compiling sha2 v0.8.2\n   Compiling ripemd160 v0.8.0\n   Compiling uint v0.8.5\n   Compiling primitive-types v0.7.3\n   Compiling bitcoin-spv v5.0.0 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/bitcoin-spv-5.0.0)\nwarning: dropping unsupported crate type `cdylib` for target `thumbv7m-none-eabi`\n\nwarning: unexpected `cfg` condition name: `tarpaulin`\n   --> src/types.rs:179:12\n    |\n179 | #[cfg_attr(tarpaulin, skip)]\n    |            ^^^^^^^^^\n    |\n    = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tarpaulin)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tarpaulin)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `tarpaulin`\n   --> src/types.rs:269:12\n    |\n269 | #[cfg_attr(tarpaulin, skip)]\n    |            ^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tarpaulin)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tarpaulin)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `tarpaulin`\n   --> src/types.rs:302:12\n    |\n302 | #[cfg_attr(tarpaulin, skip)]\n    |            ^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tarpaulin)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tarpaulin)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: `bitcoin-spv` (lib) generated 4 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 2.15s\n",
      "stdout": ""
    },
    "features": [
      "std"
    ],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/bitcoin-spv-5.0.0/src",
    "time_to_build": 3162,
    "time_to_solve": 117
  }
]