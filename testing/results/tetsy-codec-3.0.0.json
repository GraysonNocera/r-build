[
  {
    "built_with_features": null,
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features"
      ],
      "code": 101,
      "stderr": "warning: no edition set: defaulting to the 2015 edition while the latest is 2021\n   Compiling tetsy-codec v3.0.0 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/tetsy-codec-3.0.0)\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n  --> src/lib.rs:20:35\n   |\n20 | #![cfg_attr(not(feature = \"std\"), feature(alloc))]\n   |                                   ^^^^^^^^^^^^^^\n\nwarning: unused import: `core::marker::PhantomData`\n  --> src/codec.rs:28:5\n   |\n28 | use core::marker::PhantomData;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: anonymous parameters are deprecated and will be removed in the next edition\n   --> src/codec.rs:158:17\n    |\n158 |     fn decode_from(Self::As) -> Self;\n    |                    ^^^^^^^^ help: try naming the parameter or explicitly ignoring it: `_: Self::As`\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n    = note: for more information, see issue #41686 <https://github.com/rust-lang/rust/issues/41686>\n    = note: `#[warn(anonymous_parameters)]` on by default\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:278:5\n    |\n278 |             0...0b00111111 => dest.push_byte(self.0 << 2),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n    = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:293:5\n    |\n293 |             0...0b00111111 => dest.push_byte((*self.0 as u8) << 2),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:294:5\n    |\n294 |             0...0b00111111_11111111 => ((*self.0 << 2) | 0b01).encode_to(dest),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:309:5\n    |\n309 |             0...0b00111111 => dest.push_byte((*self.0 as u8) << 2),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:310:5\n    |\n310 |             0...0b00111111_11111111 => (((*self.0 as u16) << 2) | 0b01).encode_to(dest),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:311:5\n    |\n311 |             0...0b00111111_11111111_11111111_11111111 => ((*self.0 << 2) | 0b10).encode_to(dest),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:329:5\n    |\n329 |             0...0b00111111 => dest.push_byte((*self.0 as u8) << 2),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:330:5\n    |\n330 |             0...0b00111111_11111111 => (((*self.0 as u16) << 2) | 0b01).encode_to(dest),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:331:5\n    |\n331 |             0...0b00111111_11111111_11111111_11111111 => (((*self.0 as u32) << 2) | 0b10).encode_to(dest),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:356:5\n    |\n356 |             0...0b00111111 => dest.push_byte((*self.0 as u8) << 2),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:357:5\n    |\n357 |             0...0b00111111_11111111 => (((*self.0 as u16) << 2) | 0b01).encode_to(dest),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\nwarning: `...` range patterns are deprecated\n   --> src/codec.rs:358:5\n    |\n358 |             0...0b00111111_11111111_11111111_11111111 => (((*self.0 as u32) << 2) | 0b10).encode_to(dest),\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\nwarning: the feature `alloc` has been stable since 1.36.0 and no longer requires an attribute to enable\n  --> src/lib.rs:20:43\n   |\n20 | #![cfg_attr(not(feature = \"std\"), feature(alloc))]\n   |                                           ^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nFor more information about this error, try `rustc --explain E0554`.\nwarning: `tetsy-codec` (lib) generated 15 warnings\nerror: could not compile `tetsy-codec` (lib) due to 1 previous error; 15 warnings emitted\n",
      "stdout": ""
    },
    "features": [
      "std"
    ],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/tetsy-codec-3.0.0/src",
    "time_to_build": 12244,
    "time_to_solve": 46
  }
]