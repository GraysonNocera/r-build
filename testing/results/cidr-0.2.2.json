[
  {
    "built_with_features": null,
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features"
      ],
      "code": 101,
      "stderr": "   Compiling cidr v0.2.2 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/cidr-0.2.2)\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n  --> src/address.rs:13:5\n   |\n13 | use std::net::{\n   |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/local_addr_parser.rs:2:5\n  |\n2 | use std::net::{\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n  --> src/errors.rs:10:5\n   |\n10 | use std::net::AddrParseError;\n   |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/cidr/any.rs:5:5\n  |\n5 | use std::net::IpAddr;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/cidr/combined.rs:5:5\n  |\n5 | use std::net::IpAddr;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/cidr/direct.rs:9:5\n  |\n9 | use std::net::{\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n  --> src/cidr/mod.rs:15:5\n   |\n15 | use std::net::{\n   |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/family.rs:1:5\n  |\n1 | use std::net::{\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/inet/combined.rs:5:5\n  |\n5 | use std::net::IpAddr;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/inet/direct.rs:9:5\n  |\n9 | use std::net::{\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/inet/mod.rs:9:5\n  |\n9 | use std::net::{\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/inet_pair/combined.rs:2:5\n  |\n2 | use std::net::IpAddr;\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/inet_pair/direct.rs:2:5\n  |\n2 | use std::net::{\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/inet_pair/mod.rs:4:5\n  |\n4 | use std::net::{\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n --> src/internal_traits.rs:1:5\n  |\n1 | use std::net::{\n  |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/internal_traits.rs:214:12\n    |\n214 |         unsafe { std::mem::transmute(ip) }\n    |                  ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n1   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n214 -         unsafe { std::mem::transmute(ip) }\n214 +         unsafe { mem::transmute(ip) }\n    |\n\nwarning: unexpected `cfg` condition name: `doc_cfg`\n --> src/lib.rs:1:13\n  |\n1 | #![cfg_attr(doc_cfg, feature(doc_cfg))]\n  |             ^^^^^^^\n  |\n  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n  = note: `#[warn(unexpected_cfgs)]` on by default\n\nerror[E0658]: cannot borrow here, since the borrowed element may contain interior mutability\n   --> src/inet_pair/direct.rs:85:5\n    |\n85  |                 self.first().network()\n    |                 ^^^^^^^^^^^^\n...\n208 | impl_inet_pair_for! {Ipv4InetPair : inet Ipv4Inet : cidr Ipv4Cidr : addr Ipv4Addr : native u32  : family Family::Ipv4}\n    | ---------------------------------------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: see issue #80384 <https://github.com/rust-lang/rust/issues/80384> for more information\n    = note: this error originates in the macro `impl_inet_pair_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0658]: cannot borrow here, since the borrowed element may contain interior mutability\n   --> src/inet_pair/direct.rs:85:5\n    |\n85  |                 self.first().network()\n    |                 ^^^^^^^^^^^^\n...\n209 | impl_inet_pair_for! {Ipv6InetPair : inet Ipv6Inet : cidr Ipv6Cidr : addr Ipv6Addr : native u128 : family Family::Ipv6}\n    | ---------------------------------------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = note: see issue #80384 <https://github.com/rust-lang/rust/issues/80384> for more information\n    = note: this error originates in the macro `impl_inet_pair_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nSome errors have detailed explanations: E0433, E0658.\nFor more information about an error, try `rustc --explain E0433`.\nwarning: `cidr` (lib) generated 1 warning\nerror: could not compile `cidr` (lib) due to 18 previous errors; 1 warning emitted\n",
      "stdout": ""
    },
    "features": [
      "std"
    ],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/cidr-0.2.2/src",
    "time_to_build": 504,
    "time_to_solve": 220
  }
]