[
  {
    "built_with_features": "alloc",
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features",
        "--features",
        "alloc"
      ],
      "code": 101,
      "stderr": "warning: `default_features` is deprecated in favor of `default-features` and will not work in the 2024 edition\n(in the `ockam_macros` dependency)\n   Compiling ockam_core v0.101.0 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/ockam_core-0.101.0)\nerror[E0433]: failed to resolve: use of undeclared crate or module `rand_pcg`\n   --> src/compat.rs:158:32\n    |\n158 |                     RNG = Some(rand_pcg::Pcg32::seed_from_u64(1234));\n    |                                ^^^^^^^^ use of undeclared crate or module `rand_pcg`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `rand_pcg`\n   --> src/compat.rs:161:32\n    |\n161 |             let lcg = unsafe { rand_pcg::Pcg32::seed_from_u64(RNG.as_mut().unwrap().gen()) };\n    |                                ^^^^^^^^ use of undeclared crate or module `rand_pcg`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:235:20\n    |\n235 |             RwLock(spin::RwLock::new(value))\n    |                    ^^^^ use of undeclared crate or module `spin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:270:19\n    |\n270 |             Mutex(spin::Mutex::new(value))\n    |                   ^^^^ use of undeclared crate or module `spin`\n\nwarning: unexpected `cfg` condition value: `minicbor/half`\n   --> src/api.rs:698:54\n    |\n698 |                         #[cfg(all(feature = \"alloc\", feature = \"minicbor/half\"))]\n    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `feature` are: `alloc`, `backtrace`, `core2`, `debugger`, `default`, `error-traces`, `hex`, `no_std`, `once_cell`, `rand_pcg`, `spin`, `std`, and `tracing-error`\n    = help: consider adding `minicbor/half` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition value: `minicbor/half`\n   --> src/api.rs:733:38\n    |\n733 |         #[cfg(all(feature = \"alloc\", feature = \"minicbor/half\"))]\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `feature` are: `alloc`, `backtrace`, `core2`, `debugger`, `default`, `error-traces`, `hex`, `no_std`, `once_cell`, `rand_pcg`, `spin`, `std`, and `tracing-error`\n    = help: consider adding `minicbor/half` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unused import: `rand::SeedableRng`\n   --> src/compat.rs:154:17\n    |\n154 |             use rand::SeedableRng;\n    |                 ^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_imports)]` on by default\n\nwarning: unnecessary qualification\n   --> src/compat.rs:170:13\n    |\n170 |             rand::distributions::Standard: rand::prelude::Distribution<T>,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: the lint level is defined here\n   --> src/lib.rs:31:5\n    |\n31  |     unused_qualifications\n    |     ^^^^^^^^^^^^^^^^^^^^^\nhelp: remove the unnecessary path segments\n    |\n170 -             rand::distributions::Standard: rand::prelude::Distribution<T>,\n170 +             distributions::Standard: rand::prelude::Distribution<T>,\n    |\n\nwarning: unnecessary qualification\n   --> src/compat.rs:170:44\n    |\n170 |             rand::distributions::Standard: rand::prelude::Distribution<T>,\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: remove the unnecessary path segments\n    |\n170 -             rand::distributions::Standard: rand::prelude::Distribution<T>,\n170 +             rand::distributions::Standard: prelude::Distribution<T>,\n    |\n\nwarning: unnecessary qualification\n  --> src/flow_control/flow_controls/flow_controls_debug.rs:16:45\n   |\n16 |     fn fmt(&self, f: &mut Formatter<'_>) -> core::fmt::Result {\n   |                                             ^^^^^^^^^^^^^^^^^\n   |\nhelp: remove the unnecessary path segments\n   |\n16 -     fn fmt(&self, f: &mut Formatter<'_>) -> core::fmt::Result {\n16 +     fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {\n   |\n\nwarning: unused import: `flow_controls_api::*`\n  --> src/flow_control/flow_controls/mod.rs:11:9\n   |\n11 | pub use flow_controls_api::*;\n   |         ^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused import: `flow_controls_cleanup::*`\n  --> src/flow_control/flow_controls/mod.rs:12:9\n   |\n12 | pub use flow_controls_cleanup::*;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused import: `flow_controls_debug::*`\n  --> src/flow_control/flow_controls/mod.rs:13:9\n   |\n13 | pub use flow_controls_debug::*;\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused import: `macros::*`\n  --> src/routing/mod.rs:16:9\n   |\n16 | pub use macros::*;\n   |         ^^^^^^^^^\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<flow_control_id::FlowControlId, consumers_info::ConsumersInfo>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_api.rs:29:44\n   |\n29 |         let mut consumers = self.consumers.write().unwrap();\n   |                                            ^^^^^ method not found in `Arc<RwLock<BTreeMap<FlowControlId, ConsumersInfo>>>`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following traits define an item `write`, perhaps you need to implement one of them:\n           candidate #1: `Hasher`\n           candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<address::Address, producer_info::ProducerInfo>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_api.rs:53:44\n   |\n53 |         let mut producers = self.producers.write().unwrap();\n   |                                            ^^^^^ method not found in `Arc<RwLock<BTreeMap<Address, ProducerInfo>>>`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following traits define an item `write`, perhaps you need to implement one of them:\n           candidate #1: `Hasher`\n           candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<address::Address, address::Address>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_api.rs:64:49\n   |\n64 |             self.producers_additional_addresses.write().unwrap();\n   |                                                 ^^^^^ method not found in `Arc<RwLock<BTreeMap<Address, Address>>>`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following traits define an item `write`, perhaps you need to implement one of them:\n           candidate #1: `Hasher`\n           candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<address::Address, flow_control_id::FlowControlId>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_api.rs:75:42\n   |\n75 |         let mut spawners = self.spawners.write().unwrap();\n   |                                          ^^^^^ method not found in `Arc<RwLock<BTreeMap<Address, FlowControlId>>>`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following traits define an item `write`, perhaps you need to implement one of them:\n           candidate #1: `Hasher`\n           candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `read` found for struct `Arc<RwLock<BTreeMap<flow_control_id::FlowControlId, consumers_info::ConsumersInfo>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_api.rs:82:40\n   |\n82 |         let consumers = self.consumers.read().unwrap();\n   |                                        ^^^^ method not found in `Arc<RwLock<BTreeMap<FlowControlId, ConsumersInfo>>>`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `read`, perhaps you need to implement it:\n           candidate #1: `core2::io::Read`\n\nerror[E0599]: no method named `read` found for struct `Arc<RwLock<BTreeMap<address::Address, flow_control_id::FlowControlId>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_api.rs:88:38\n   |\n88 |         let spawners = self.spawners.read().unwrap();\n   |                                      ^^^^ method not found in `Arc<RwLock<BTreeMap<Address, FlowControlId>>>`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `read`, perhaps you need to implement it:\n           candidate #1: `core2::io::Read`\n\nerror[E0599]: no method named `read` found for struct `Arc<RwLock<BTreeMap<address::Address, producer_info::ProducerInfo>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_api.rs:94:40\n   |\n94 |         let producers = self.producers.read().unwrap();\n   |                                        ^^^^ method not found in `Arc<RwLock<BTreeMap<Address, ProducerInfo>>>`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `read`, perhaps you need to implement it:\n           candidate #1: `core2::io::Read`\n\nerror[E0599]: no method named `read` found for struct `Arc<RwLock<BTreeMap<address::Address, address::Address>>>` in the current scope\n   --> src/flow_control/flow_controls/flow_controls_api.rs:104:82\n    |\n104 |         let producers_additional_addresses = self.producers_additional_addresses.read().unwrap();\n    |                                                                                  ^^^^ method not found in `Arc<RwLock<BTreeMap<Address, Address>>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `read`, perhaps you need to implement it:\n            candidate #1: `core2::io::Read`\n\nerror[E0599]: no method named `read` found for struct `Arc<RwLock<BTreeMap<address::Address, producer_info::ProducerInfo>>>` in the current scope\n   --> src/flow_control/flow_controls/flow_controls_api.rs:110:40\n    |\n110 |         let producers = self.producers.read().unwrap();\n    |                                        ^^^^ method not found in `Arc<RwLock<BTreeMap<Address, ProducerInfo>>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `read`, perhaps you need to implement it:\n            candidate #1: `core2::io::Read`\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<address::Address, flow_control_id::FlowControlId>>>` in the current scope\n --> src/flow_control/flow_controls/flow_controls_cleanup.rs:6:59\n  |\n6 |         let spawner_flow_control_id = match self.spawners.write().unwrap().remove(address) {\n  |                                                           ^^^^^ method not found in `Arc<RwLock<BTreeMap<Address, FlowControlId>>>`\n  |\n  = help: items from traits can only be used if the trait is implemented and in scope\n  = note: the following traits define an item `write`, perhaps you need to implement one of them:\n          candidate #1: `Hasher`\n          candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `read` found for struct `Arc<RwLock<BTreeMap<address::Address, flow_control_id::FlowControlId>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_cleanup.rs:14:14\n   |\n12 |           let spawners_exist = self\n   |  ______________________________-\n13 | |             .spawners\n14 | |             .read()\n   | |             -^^^^ method not found in `Arc<RwLock<BTreeMap<Address, FlowControlId>>>`\n   | |_____________|\n   |\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `read`, perhaps you need to implement it:\n           candidate #1: `core2::io::Read`\n\nerror[E0599]: no method named `read` found for struct `Arc<RwLock<BTreeMap<address::Address, producer_info::ProducerInfo>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_cleanup.rs:26:28\n   |\n26 |             self.producers.read().unwrap().iter().any(|(_addr, info)| {\n   |                            ^^^^ method not found in `Arc<RwLock<BTreeMap<Address, ProducerInfo>>>`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `read`, perhaps you need to implement it:\n           candidate #1: `core2::io::Read`\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<flow_control_id::FlowControlId, consumers_info::ConsumersInfo>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_cleanup.rs:41:14\n   |\n40 | /         self.consumers\n41 | |             .write()\n   | |             -^^^^^ method not found in `Arc<RwLock<BTreeMap<FlowControlId, ConsumersInfo>>>`\n   | |_____________|\n   |\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following traits define an item `write`, perhaps you need to implement one of them:\n           candidate #1: `Hasher`\n           candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `read` found for struct `Arc<RwLock<BTreeMap<address::Address, flow_control_id::FlowControlId>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_cleanup.rs:50:14\n   |\n48 |           let spawner_exists = self\n   |  ______________________________-\n49 | |             .spawners\n50 | |             .read()\n   | |             -^^^^ method not found in `Arc<RwLock<BTreeMap<Address, FlowControlId>>>`\n   | |_____________|\n   |\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `read`, perhaps you need to implement it:\n           candidate #1: `core2::io::Read`\n\nerror[E0599]: no method named `read` found for struct `Arc<RwLock<BTreeMap<address::Address, producer_info::ProducerInfo>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_cleanup.rs:63:18\n   |\n62 | /             self.producers\n63 | |                 .read()\n   | |                 -^^^^ method not found in `Arc<RwLock<BTreeMap<Address, ProducerInfo>>>`\n   | |_________________|\n   |\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `read`, perhaps you need to implement it:\n           candidate #1: `core2::io::Read`\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<flow_control_id::FlowControlId, consumers_info::ConsumersInfo>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_cleanup.rs:77:24\n   |\n77 |         self.consumers.write().unwrap().remove(flow_control_id);\n   |                        ^^^^^ method not found in `Arc<RwLock<BTreeMap<FlowControlId, ConsumersInfo>>>`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following traits define an item `write`, perhaps you need to implement one of them:\n           candidate #1: `Hasher`\n           candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<address::Address, producer_info::ProducerInfo>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_cleanup.rs:81:41\n   |\n81 |         let info = match self.producers.write().unwrap().remove(address) {\n   |                                         ^^^^^ method not found in `Arc<RwLock<BTreeMap<Address, ProducerInfo>>>`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following traits define an item `write`, perhaps you need to implement one of them:\n           candidate #1: `Hasher`\n           candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<address::Address, address::Address>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_cleanup.rs:88:14\n   |\n87 | /         self.producers_additional_addresses\n88 | |             .write()\n   | |             -^^^^^ method not found in `Arc<RwLock<BTreeMap<Address, Address>>>`\n   | |_____________|\n   |\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following traits define an item `write`, perhaps you need to implement one of them:\n           candidate #1: `Hasher`\n           candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `read` found for struct `Arc<RwLock<BTreeMap<address::Address, producer_info::ProducerInfo>>>` in the current scope\n   --> src/flow_control/flow_controls/flow_controls_cleanup.rs:102:14\n    |\n100 |           let other_producers_exist = self\n    |  _____________________________________-\n101 | |             .producers\n102 | |             .read()\n    | |             -^^^^ method not found in `Arc<RwLock<BTreeMap<Address, ProducerInfo>>>`\n    | |_____________|\n    |\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `read`, perhaps you need to implement it:\n            candidate #1: `core2::io::Read`\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<flow_control_id::FlowControlId, consumers_info::ConsumersInfo>>>` in the current scope\n   --> src/flow_control/flow_controls/flow_controls_cleanup.rs:111:24\n    |\n111 |         self.consumers.write().unwrap().remove(&flow_control_id);\n    |                        ^^^^^ method not found in `Arc<RwLock<BTreeMap<FlowControlId, ConsumersInfo>>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `write`, perhaps you need to implement one of them:\n            candidate #1: `Hasher`\n            candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<flow_control_id::FlowControlId, consumers_info::ConsumersInfo>>>` in the current scope\n   --> src/flow_control/flow_controls/flow_controls_cleanup.rs:116:44\n    |\n116 |         let mut consumers = self.consumers.write().unwrap();\n    |                                            ^^^^^ method not found in `Arc<RwLock<BTreeMap<FlowControlId, ConsumersInfo>>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `write`, perhaps you need to implement one of them:\n            candidate #1: `Hasher`\n            candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `write` found for struct `Arc<RwLock<BTreeMap<flow_control_id::FlowControlId, consumers_info::ConsumersInfo>>>` in the current scope\n   --> src/flow_control/flow_controls/flow_controls_cleanup.rs:126:44\n    |\n126 |         let mut consumers = self.consumers.write().unwrap();\n    |                                            ^^^^^ method not found in `Arc<RwLock<BTreeMap<FlowControlId, ConsumersInfo>>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `write`, perhaps you need to implement one of them:\n            candidate #1: `Hasher`\n            candidate #2: `core2::io::Write`\n\nerror[E0599]: no method named `read` found for struct `Arc<RwLock<BTreeMap<flow_control_id::FlowControlId, consumers_info::ConsumersInfo>>>` in the current scope\n  --> src/flow_control/flow_controls/flow_controls_debug.rs:34:18\n   |\n33 | /             self.consumers\n34 | |                 .read()\n   | |                 -^^^^ method not found in `Arc<RwLock<BTreeMap<FlowControlId, ConsumersInfo>>>`\n   | |_________________|\n   |\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `read`, perhaps you need to implement it:\n           candidate #1: `core2::io::Read`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `rand_pcg`\n   --> src/compat.rs:123:28\n    |\n123 |         pub struct FakeRng(rand_pcg::Lcg64Xsh32);\n    |                            ^^^^^^^^ use of undeclared crate or module `rand_pcg`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `rand_pcg`\n   --> src/compat.rs:155:36\n    |\n155 |             static mut RNG: Option<rand_pcg::Lcg64Xsh32> = None;\n    |                                    ^^^^^^^^ use of undeclared crate or module `rand_pcg`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:231:26\n    |\n231 |     pub struct RwLock<T>(spin::RwLock<T>);\n    |                          ^^^^ use of undeclared crate or module `spin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:239:38\n    |\n239 |         pub fn read(&self) -> Result<spin::RwLockReadGuard<'_, T>, Infallible> {\n    |                                      ^^^^ use of undeclared crate or module `spin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:244:39\n    |\n244 |         pub fn write(&self) -> Result<spin::RwLockWriteGuard<'_, T>, Infallible> {\n    |                                       ^^^^ use of undeclared crate or module `spin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:254:23\n    |\n254 |         type Target = spin::RwLock<T>;\n    |                       ^^^^ use of undeclared crate or module `spin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:255:29\n    |\n255 |         fn deref(&self) -> &spin::RwLock<T> {\n    |                             ^^^^ use of undeclared crate or module `spin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:260:41\n    |\n260 |         fn deref_mut(&mut self) -> &mut spin::RwLock<T> {\n    |                                         ^^^^ use of undeclared crate or module `spin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:266:25\n    |\n266 |     pub struct Mutex<T>(spin::Mutex<T>);\n    |                         ^^^^ use of undeclared crate or module `spin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:273:38\n    |\n273 |         pub fn lock(&self) -> Result<spin::MutexGuard<'_, T>, Infallible> {\n    |                                      ^^^^ use of undeclared crate or module `spin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:278:23\n    |\n278 |         type Target = spin::Mutex<T>;\n    |                       ^^^^ use of undeclared crate or module `spin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:279:29\n    |\n279 |         fn deref(&self) -> &spin::Mutex<T> {\n    |                             ^^^^ use of undeclared crate or module `spin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `spin`\n   --> src/compat.rs:284:41\n    |\n284 |         fn deref_mut(&mut self) -> &mut spin::Mutex<T> {\n    |                                         ^^^^ use of undeclared crate or module `spin`\n\nSome errors have detailed explanations: E0433, E0599.\nFor more information about an error, try `rustc --explain E0433`.\nwarning: `ockam_core` (lib) generated 10 warnings\nerror: could not compile `ockam_core` (lib) due to 40 previous errors; 10 warnings emitted\n",
      "stdout": ""
    },
    "features": [
      "alloc",
      "std"
    ],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/ockam_core-0.101.0/src",
    "time_to_build": 736,
    "time_to_solve": 224
  }
]