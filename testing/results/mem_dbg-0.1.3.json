[
  {
    "built_with_features": "alloc",
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features",
        "--features",
        "alloc"
      ],
      "code": 101,
      "stderr": "   Compiling mem_dbg v0.1.3 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/mem_dbg-0.1.3)\nerror[E0252]: the name `Vec` is defined multiple times\n   --> src/impl_mem_size.rs:173:5\n    |\n163 | use alloc::vec::Vec;\n    |     --------------- previous import of the type `Vec` here\n...\n173 | use alloc::vec::Vec;\n    |     ^^^^^^^^^^^^^^^ `Vec` reimported here\n    |\n    = note: `Vec` must be defined only once in the type namespace of this module\n\nerror[E0252]: the name `Vec` is defined multiple times\n   --> src/impl_mem_size.rs:233:5\n    |\n163 | use alloc::vec::Vec;\n    |     --------------- previous import of the type `Vec` here\n...\n233 | use alloc::vec::Vec;\n    |     ^^^^^^^^^^^^^^^ `Vec` reimported here\n    |\n    = note: `Vec` must be defined only once in the type namespace of this module\n\nerror[E0252]: the name `Vec` is defined multiple times\n   --> src/impl_mem_size.rs:247:5\n    |\n163 | use alloc::vec::Vec;\n    |     --------------- previous import of the type `Vec` here\n...\n247 | use alloc::vec::Vec;\n    |     ^^^^^^^^^^^^^^^ `Vec` reimported here\n    |\n    = note: `Vec` must be defined only once in the type namespace of this module\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n  --> src/impl_mem_dbg.rs:12:5\n   |\n12 | use std::collections::{HashMap, HashSet};\n   |     ^^^ use of undeclared crate or module `std`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n  --> src/impl_mem_size.rs:12:5\n   |\n12 | use std::collections::{HashMap, HashSet};\n   |     ^^^ use of undeclared crate or module `std`\n\nerror[E0412]: cannot find type `AtomicI64` in this scope\n    --> src/impl_mem_dbg.rs:30:37\n     |\n30   |       AtomicI8, AtomicI16, AtomicI32, AtomicI64, AtomicIsize,\n     |                                       ^^^^^^^^^ help: a struct with a similar name exists: `AtomicI16`\n     |\n    ::: /Users/graysonnocera/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/sync/atomic.rs:3067:1\n     |\n3067 | / atomic_int! {\n3068 | |     cfg(target_has_atomic = \"16\"),\n3069 | |     cfg(target_has_atomic_equal_alignment = \"16\"),\n3070 | |     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n...    |\n3082 | |     i16 AtomicI16\n3083 | | }\n     | |_- similarly named struct `AtomicI16` defined here\n\nerror[E0412]: cannot find type `AtomicU64` in this scope\n    --> src/impl_mem_dbg.rs:31:37\n     |\n31   |       AtomicU8, AtomicU16, AtomicU32, AtomicU64, AtomicUsize,\n     |                                       ^^^^^^^^^ help: a struct with a similar name exists: `AtomicU16`\n     |\n    ::: /Users/graysonnocera/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/sync/atomic.rs:3085:1\n     |\n3085 | / atomic_int! {\n3086 | |     cfg(target_has_atomic = \"16\"),\n3087 | |     cfg(target_has_atomic_equal_alignment = \"16\"),\n3088 | |     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n...    |\n3100 | |     u16 AtomicU16\n3101 | | }\n     | |_- similarly named struct `AtomicU16` defined here\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/impl_mem_dbg.rs:41:21\n   |\n41 | impl MemDbgImpl for String {}\n   |                     ^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n9  + use alloc::string::String;\n   |\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/impl_mem_dbg.rs:55:22\n   |\n55 |         prefix: &mut String,\n   |                      ^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n9  + use alloc::string::String;\n   |\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/impl_mem_dbg.rs:73:22\n   |\n73 |         prefix: &mut String,\n   |                      ^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n9  + use alloc::string::String;\n   |\n\nerror[E0412]: cannot find type `Box` in this scope\n  --> src/impl_mem_dbg.rs:92:45\n   |\n92 | impl<T: ?Sized + MemDbgImpl> MemDbgImpl for Box<T> {\n   |                                             ^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n9  + use alloc::boxed::Box;\n   |\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/impl_mem_dbg.rs:98:22\n   |\n98 |         prefix: &mut String,\n   |                      ^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n9  + use alloc::string::String;\n   |\n\nerror[E0412]: cannot find type `Vec` in this scope\n   --> src/impl_mem_dbg.rs:121:47\n    |\n121 | impl<T: CopyType + MemDbgImpl> MemDbgImpl for Vec<T> where\n    |                                               ^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n9   + use alloc::vec::Vec;\n    |\n\nerror[E0412]: cannot find type `Vec` in this scope\n   --> src/impl_mem_dbg.rs:122:5\n    |\n122 |     Vec<T>: MemSizeHelper<<T as CopyType>::Copy>\n    |     ^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n9   + use alloc::vec::Vec;\n    |\n\nerror[E0412]: cannot find type `String` in this scope\n   --> src/impl_mem_dbg.rs:151:30\n    |\n151 |                   prefix: &mut String,\n    |                                ^^^^^^ not found in this scope\n...\n170 | / impl_tuples_muncher!(\n171 | |     (9 => T9),\n172 | |     (8 => T8),\n173 | |     (7 => T7),\n...   |\n180 | |     (0 => T0),\n181 | | );\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `impl_tuples_muncher` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this struct\n    |\n9   + use alloc::string::String;\n    |\n\nerror[E0412]: cannot find type `AtomicI64` in this scope\n    --> src/impl_mem_size.rs:37:36\n     |\n37   |      AtomicI8, AtomicI16, AtomicI32, AtomicI64, AtomicIsize,\n     |                                      ^^^^^^^^^ help: a struct with a similar name exists: `AtomicI16`\n     |\n    ::: /Users/graysonnocera/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/sync/atomic.rs:3067:1\n     |\n3067 | / atomic_int! {\n3068 | |     cfg(target_has_atomic = \"16\"),\n3069 | |     cfg(target_has_atomic_equal_alignment = \"16\"),\n3070 | |     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n...    |\n3082 | |     i16 AtomicI16\n3083 | | }\n     | |_- similarly named struct `AtomicI16` defined here\n\nerror[E0412]: cannot find type `AtomicU64` in this scope\n    --> src/impl_mem_size.rs:38:36\n     |\n38   |      AtomicU8, AtomicU16, AtomicU32, AtomicU64, AtomicUsize,\n     |                                      ^^^^^^^^^ help: a struct with a similar name exists: `AtomicU16`\n     |\n    ::: /Users/graysonnocera/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/sync/atomic.rs:3085:1\n     |\n3085 | / atomic_int! {\n3086 | |     cfg(target_has_atomic = \"16\"),\n3087 | |     cfg(target_has_atomic_equal_alignment = \"16\"),\n3088 | |     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n...    |\n3100 | |     u16 AtomicU16\n3101 | | }\n     | |_- similarly named struct `AtomicU16` defined here\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/impl_mem_size.rs:57:19\n   |\n57 | impl CopyType for String {\n   |                   ^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n9  + use alloc::string::String;\n   |\n\nerror[E0412]: cannot find type `String` in this scope\n  --> src/impl_mem_size.rs:61:18\n   |\n61 | impl MemSize for String {\n   |                  ^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n9  + use alloc::string::String;\n   |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:168:41\n    |\n168 |         core::mem::size_of::<usize>() + std::mem::size_of_val(self)\n    |                                         ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n168 -         core::mem::size_of::<usize>() + std::mem::size_of_val(self)\n168 +         core::mem::size_of::<usize>() + mem::size_of_val(self)\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:371:19\n    |\n371 |                 * std::mem::size_of::<K>()\n    |                   ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n371 -                 * std::mem::size_of::<K>()\n371 +                 * mem::size_of::<K>()\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:373:23\n    |\n373 |                     * std::mem::size_of::<u8>()\n    |                       ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n373 -                     * std::mem::size_of::<u8>()\n373 +                     * mem::size_of::<u8>()\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:376:19\n    |\n376 |                 * std::mem::size_of::<K>()\n    |                   ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n376 -                 * std::mem::size_of::<K>()\n376 +                 * mem::size_of::<K>()\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:378:23\n    |\n378 |                     * std::mem::size_of::<u8>()\n    |                       ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n378 -                     * std::mem::size_of::<u8>()\n378 +                     * mem::size_of::<u8>()\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:386:36\n    |\n386 |         fix_set_for_capacity(self, std::mem::size_of::<K>() * self.len(), flags)\n    |                                    ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n386 -         fix_set_for_capacity(self, std::mem::size_of::<K>() * self.len(), flags)\n386 +         fix_set_for_capacity(self, mem::size_of::<K>() * self.len(), flags)\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:429:20\n    |\n429 |                 * (std::mem::size_of::<K>() + std::mem::size_of::<V>())\n    |                    ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n429 -                 * (std::mem::size_of::<K>() + std::mem::size_of::<V>())\n429 +                 * (mem::size_of::<K>() + std::mem::size_of::<V>())\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:429:47\n    |\n429 |                 * (std::mem::size_of::<K>() + std::mem::size_of::<V>())\n    |                                               ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n429 -                 * (std::mem::size_of::<K>() + std::mem::size_of::<V>())\n429 +                 * (std::mem::size_of::<K>() + mem::size_of::<V>())\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:431:23\n    |\n431 |                     * std::mem::size_of::<u8>()\n    |                       ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n431 -                     * std::mem::size_of::<u8>()\n431 +                     * mem::size_of::<u8>()\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:434:20\n    |\n434 |                 * (std::mem::size_of::<K>() + std::mem::size_of::<V>())\n    |                    ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n434 -                 * (std::mem::size_of::<K>() + std::mem::size_of::<V>())\n434 +                 * (mem::size_of::<K>() + std::mem::size_of::<V>())\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:434:47\n    |\n434 |                 * (std::mem::size_of::<K>() + std::mem::size_of::<V>())\n    |                                               ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n434 -                 * (std::mem::size_of::<K>() + std::mem::size_of::<V>())\n434 +                 * (std::mem::size_of::<K>() + mem::size_of::<V>())\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:436:23\n    |\n436 |                     * std::mem::size_of::<u8>()\n    |                       ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n436 -                     * std::mem::size_of::<u8>()\n436 +                     * mem::size_of::<u8>()\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:446:14\n    |\n446 |             (std::mem::size_of::<K>() + std::mem::size_of::<V>()) * self.len(),\n    |              ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n446 -             (std::mem::size_of::<K>() + std::mem::size_of::<V>()) * self.len(),\n446 +             (mem::size_of::<K>() + std::mem::size_of::<V>()) * self.len(),\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:446:41\n    |\n446 |             (std::mem::size_of::<K>() + std::mem::size_of::<V>()) * self.len(),\n    |                                         ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n446 -             (std::mem::size_of::<K>() + std::mem::size_of::<V>()) * self.len(),\n446 +             (std::mem::size_of::<K>() + mem::size_of::<V>()) * self.len(),\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:458:14\n    |\n458 |             (std::mem::size_of::<K>()) * self.len()\n    |              ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n458 -             (std::mem::size_of::<K>()) * self.len()\n458 +             (mem::size_of::<K>()) * self.len()\n    |\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `std`\n   --> src/impl_mem_size.rs:472:20\n    |\n472 |                 + (std::mem::size_of::<V>()) * self.len(),\n    |                    ^^^ use of undeclared crate or module `std`\n    |\nhelp: consider importing this module\n    |\n9   + use core::mem;\n    |\nhelp: if you import `mem`, refer to it directly\n    |\n472 -                 + (std::mem::size_of::<V>()) * self.len(),\n472 +                 + (mem::size_of::<V>()) * self.len(),\n    |\n\nerror[E0433]: failed to resolve: use of undeclared type `String`\n   --> src/lib.rs:186:18\n    |\n186 |             &mut String::new(),\n    |                  ^^^^^^ use of undeclared type `String`\n    |\nhelp: consider importing this struct\n    |\n12  + use alloc::string::String;\n    |\n\nerror[E0412]: cannot find type `String` in this scope\n   --> src/lib.rs:235:22\n    |\n235 |         prefix: &mut String,\n    |                      ^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n12  + use alloc::string::String;\n    |\n\nerror[E0412]: cannot find type `String` in this scope\n   --> src/lib.rs:354:23\n    |\n354 |         _prefix: &mut String,\n    |                       ^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n12  + use alloc::string::String;\n    |\n\nwarning: unexpected `cfg` condition value: `mmap_rs`\n   --> src/impl_mem_dbg.rs:191:7\n    |\n191 | #[cfg(feature = \"mmap_rs\")]\n    |       ^^^^^^^^^^---------\n    |                 |\n    |                 help: there is a expected value with a similar name: `\"mmap-rs\"`\n    |\n    = note: expected values for `feature` are: `alloc`, `default`, `derive`, `mem_dbg-derive`, `mmap-rs`, and `std`\n    = help: consider adding `mmap_rs` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition value: `mmap_rs`\n   --> src/impl_mem_dbg.rs:194:7\n    |\n194 | #[cfg(feature = \"mmap_rs\")]\n    |       ^^^^^^^^^^---------\n    |                 |\n    |                 help: there is a expected value with a similar name: `\"mmap-rs\"`\n    |\n    = note: expected values for `feature` are: `alloc`, `default`, `derive`, `mem_dbg-derive`, `mmap-rs`, and `std`\n    = help: consider adding `mmap_rs` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `mmap_rs`\n   --> src/impl_mem_size.rs:307:7\n    |\n307 | #[cfg(feature = \"mmap_rs\")]\n    |       ^^^^^^^^^^---------\n    |                 |\n    |                 help: there is a expected value with a similar name: `\"mmap-rs\"`\n    |\n    = note: expected values for `feature` are: `alloc`, `default`, `derive`, `mem_dbg-derive`, `mmap-rs`, and `std`\n    = help: consider adding `mmap_rs` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `mmap_rs`\n   --> src/impl_mem_size.rs:315:7\n    |\n315 | #[cfg(feature = \"mmap_rs\")]\n    |       ^^^^^^^^^^---------\n    |                 |\n    |                 help: there is a expected value with a similar name: `\"mmap-rs\"`\n    |\n    = note: expected values for `feature` are: `alloc`, `default`, `derive`, `mem_dbg-derive`, `mmap-rs`, and `std`\n    = help: consider adding `mmap_rs` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unused import: `alloc::vec::Vec`\n   --> src/impl_mem_size.rs:173:5\n    |\n173 | use alloc::vec::Vec;\n    |     ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `alloc::vec::Vec`\n   --> src/impl_mem_size.rs:233:5\n    |\n233 | use alloc::vec::Vec;\n    |     ^^^^^^^^^^^^^^^\n\nwarning: unused import: `alloc::vec::Vec`\n   --> src/impl_mem_size.rs:247:5\n    |\n247 | use alloc::vec::Vec;\n    |     ^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `abs` found for type `f64` in the current scope\n  --> src/utils.rs:21:10\n   |\n21 |     if x.abs() > 1.0 {\n   |          ^^^ method not found in `f64`\n\nerror[E0599]: no method named `abs` found for type `f64` in the current scope\n  --> src/utils.rs:22:17\n   |\n22 |         while x.abs() > 1000.0 && uom_idx < UOM.len() - 1 {\n   |                 ^^^ method not found in `f64`\n\nerror[E0599]: no method named `abs` found for type `f64` in the current scope\n  --> src/utils.rs:27:17\n   |\n27 |         while x.abs() < 0.001 && uom_idx > 0 {\n   |                 ^^^ method not found in `f64`\n\nerror[E0599]: no method named `abs` found for type `f64` in the current scope\n   --> src/lib.rs:250:31\n    |\n250 |                 let a = value.abs();\n    |                               ^^^ method not found in `f64`\n\nSome errors have detailed explanations: E0252, E0412, E0433, E0599.\nFor more information about an error, try `rustc --explain E0252`.\nwarning: `mem_dbg` (lib) generated 7 warnings\nerror: could not compile `mem_dbg` (lib) due to 51 previous errors; 7 warnings emitted\n",
      "stdout": ""
    },
    "features": [
      "alloc",
      "std"
    ],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/mem_dbg-0.1.3/src",
    "time_to_build": 233,
    "time_to_solve": 61
  }
]