[
  {
    "built_with_features": null,
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features"
      ],
      "code": 101,
      "stderr": "   Compiling resid-rs v1.1.1\n   Compiling zinc64-core v0.8.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7m-none-eabi` target may not support the standard library\n  = note: `std` is required by `zinc64_core` because it does not declare `#![no_std]`\n\nerror[E0463]: can't find crate for `std`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/lib.rs:17:5\n   |\n17 | use std::rc::Rc;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv7m-none-eabi` target may not support the standard library\n\nerror[E0463]: can't find crate for `std`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/chip_factory.rs:14:5\n   |\n14 | use std::rc::Rc;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv7m-none-eabi` target may not support the standard library\n\nerror[E0463]: can't find crate for `std`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/chip_factory.rs:16:5\n   |\n16 | use std::sync::Arc;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv7m-none-eabi` target may not support the standard library\n\nerror: cannot find attribute `derive` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/lib.rs:75:3\n   |\n75 | #[derive(Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n15 + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/system_model.rs:54:18\n   |\n54 |             _ => panic!(\"invalid model {}\", model),\n   |                  ^^^^^\n   |\nhelp: consider importing this macro\n   |\n22 + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/system_model.rs:28:3\n   |\n28 | #[derive(Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n22 + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/system_model.rs:22:3\n   |\n22 | #[derive(Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n22 + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/rom.rs:36:9\n   |\n36 |         panic!(\"writes to rom are not supported\")\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n5  + use core::panic;\n   |\n\nerror: cannot find macro `vec` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/rom.rs:17:24\n   |\n17 |         let mut data = vec![0x00; capacity];\n   |                        ^^^\n\nerror: cannot find macro `vec` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/ram.rs:17:19\n   |\n17 |             data: vec![0x00; capacity],\n   |                   ^^^\n\nerror: cannot find attribute `derive` in this scope\n --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:5:3\n  |\n5 | #[derive(Clone, Copy, PartialEq)]\n  |   ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n5 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/irq_control.rs:7:3\n  |\n7 | #[derive(Default)]\n  |   ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n5 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/clock.rs:7:3\n  |\n7 | #[derive(Default)]\n  |   ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n5 + use core::prelude::rust_2024::derive;\n  |\n\nerror[E0463]: can't find crate for `std`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/resid-rs-1.1.1/src/lib.rs:11:1\n   |\n11 | extern crate std as alloc;\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate\n   |\n   = note: the `thumbv7m-none-eabi` target may not support the standard library\n\nerror[E0412]: cannot find type `Box` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/chip_factory.rs:52:10\n   |\n52 |     ) -> Box<dyn Cpu>;\n   |          ^^^ not found in this scope\n\nerror[E0412]: cannot find type `Box` in this scope\n --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/io_port.rs:9:21\n  |\n9 | pub type Observer = Box<dyn Fn(u8)>;\n  |                     ^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Fn` in this scope\n --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/io_port.rs:9:29\n  |\n9 | pub type Observer = Box<dyn Fn(u8)>;\n  |                             ^^ not found in this scope\n  |\nhelp: consider importing this trait\n  |\n7 + use core::ops::Fn;\n  |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/io_port.rs:17:15\n   |\n17 |     observer: Option<Observer>,\n   |               ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n7  + use core::option::Option;\n   |\n\nerror[E0425]: cannot find value `None` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/io_port.rs:26:23\n   |\n26 |             observer: None,\n   |                       ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n7  + use core::option::Option::None;\n   |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/io_port.rs:58:25\n   |\n58 |         self.observer = Some(observer);\n   |                         ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n7  + use core::option::Option::Some;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/io_port.rs:74:16\n   |\n74 |         if let Some(ref observer) = self.observer {\n   |                ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n7  + use core::option::Option::Some;\n   |\n\nerror[E0412]: cannot find type `Vec` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/ram.rs:11:11\n   |\n11 |     data: Vec<u8>,\n   |           ^^^ not found in this scope\n\nerror[E0412]: cannot find type `Vec` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/rom.rs:11:11\n   |\n11 |     data: Vec<u8>,\n   |           ^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Fn` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/lib.rs:52:26\n   |\n52 | pub type TickFn = Rc<dyn Fn()>;\n   |                          ^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n15 + use core::ops::Fn;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/lib.rs:69:41\n   |\n69 |     fn read(&mut self, address: u16) -> Option<u8>;\n   |                                         ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n15 + use core::option::Option;\n   |\n\nerror[E0369]: binary operation `==` cannot be applied to type `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:32:19\n   |\n32 |         self.last == State::High && self.state == State::Low\n   |         --------- ^^ ----------- State\n   |         |\n   |         State\n   |\nnote: an implementation of `PartialEq` might be missing for `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:6:1\n   |\n6  | enum State {\n   | ^^^^^^^^^^ must implement `PartialEq`\nhelp: consider annotating `State` with `#[derive(PartialEq)]`\n   |\n6  + #[derive(PartialEq)]\n7  | enum State {\n   |\n\nerror[E0369]: binary operation `==` cannot be applied to type `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:32:48\n   |\n32 |         self.last == State::High && self.state == State::Low\n   |                                     ---------- ^^ ---------- State\n   |                                     |\n   |                                     State\n   |\nnote: an implementation of `PartialEq` might be missing for `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:6:1\n   |\n6  | enum State {\n   | ^^^^^^^^^^ must implement `PartialEq`\nhelp: consider annotating `State` with `#[derive(PartialEq)]`\n   |\n6  + #[derive(PartialEq)]\n7  | enum State {\n   |\n\nerror[E0369]: binary operation `==` cannot be applied to type `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:36:20\n   |\n36 |         self.state == State::High\n   |         ---------- ^^ ----------- State\n   |         |\n   |         State\n   |\nnote: an implementation of `PartialEq` might be missing for `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:6:1\n   |\n6  | enum State {\n   | ^^^^^^^^^^ must implement `PartialEq`\nhelp: consider annotating `State` with `#[derive(PartialEq)]`\n   |\n6  + #[derive(PartialEq)]\n7  | enum State {\n   |\n\nerror[E0369]: binary operation `==` cannot be applied to type `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:40:20\n   |\n40 |         self.state == State::Low\n   |         ---------- ^^ ---------- State\n   |         |\n   |         State\n   |\nnote: an implementation of `PartialEq` might be missing for `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:6:1\n   |\n6  | enum State {\n   | ^^^^^^^^^^ must implement `PartialEq`\nhelp: consider annotating `State` with `#[derive(PartialEq)]`\n   |\n6  + #[derive(PartialEq)]\n7  | enum State {\n   |\n\nerror[E0369]: binary operation `==` cannot be applied to type `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:44:19\n   |\n44 |         self.last == State::Low && self.state == State::High\n   |         --------- ^^ ---------- State\n   |         |\n   |         State\n   |\nnote: an implementation of `PartialEq` might be missing for `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:6:1\n   |\n6  | enum State {\n   | ^^^^^^^^^^ must implement `PartialEq`\nhelp: consider annotating `State` with `#[derive(PartialEq)]`\n   |\n6  + #[derive(PartialEq)]\n7  | enum State {\n   |\n\nerror[E0369]: binary operation `==` cannot be applied to type `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:44:47\n   |\n44 |         self.last == State::Low && self.state == State::High\n   |                                    ---------- ^^ ----------- State\n   |                                    |\n   |                                    State\n   |\nnote: an implementation of `PartialEq` might be missing for `State`\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:6:1\n   |\n6  | enum State {\n   | ^^^^^^^^^^ must implement `PartialEq`\nhelp: consider annotating `State` with `#[derive(PartialEq)]`\n   |\n6  + #[derive(PartialEq)]\n7  | enum State {\n   |\n\nerror[E0599]: no method named `to_vec` found for reference `&[u8]` in the current scope\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/rom.rs:26:24\n   |\n26 |             data: data.to_vec(),\n   |                        ^^^^^^ method not found in `&[u8]`\n\nerror[E0507]: cannot move out of `self.state` which is behind a mutable reference\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:56:21\n   |\n56 |         self.last = self.state;\n   |                     ^^^^^^^^^^ move occurs because `self.state` has type `State`, which does not implement the `Copy` trait\n   |\nnote: if `State` implemented `Clone`, you could clone the value\n  --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zinc64-core-0.8.0/src/pin.rs:6:1\n   |\n6  | enum State {\n   | ^^^^^^^^^^ consider implementing `Clone` for this type\n...\n56 |         self.last = self.state;\n   |                     ---------- you could clone this value\n\nSome errors have detailed explanations: E0369, E0405, E0412, E0425, E0463, E0507, E0531, E0599.\nFor more information about an error, try `rustc --explain E0369`.\nerror: could not compile `zinc64-core` (lib) due to 33 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0599]: no method named `log10` found for type `f64` in the current scope\n   --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/resid-rs-1.1.1/src/sampler.rs:560:60\n    |\n560 |         let atten = -20.0f64 * (1.0 / (1i32 << 16) as f64).log10();\n    |                                                            ^^^^^ method not found in `f64`\n\nerror[E0599]: no method named `ln` found for type `f64` in the current scope\n    --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/resid-rs-1.1.1/src/sampler.rs:591:51\n     |\n591  |         let n = ((res as f64 / cycles_per_sample).ln() / (2.0f64).ln()).ceil() as i32;\n     |                                                   ^^\n     |\nhelp: there is a method `le` with a similar name, but with different arguments\n    --> /Users/graysonnocera/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs:1197:5\n     |\n1197 |     fn le(&self, other: &Rhs) -> bool {\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `ln` found for type `f64` in the current scope\n    --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/resid-rs-1.1.1/src/sampler.rs:591:67\n     |\n591  |         let n = ((res as f64 / cycles_per_sample).ln() / (2.0f64).ln()).ceil() as i32;\n     |                                                                   ^^\n     |\nhelp: there is a method `le` with a similar name, but with different arguments\n    --> /Users/graysonnocera/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs:1197:5\n     |\n1197 |     fn le(&self, other: &Rhs) -> bool {\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `abs` found for type `f64` in the current scope\n   --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/resid-rs-1.1.1/src/sampler.rs:610:38\n    |\n610 |                 let kaiser = if temp.abs() <= 1.0 {\n    |                                      ^^^ method not found in `f64`\n\nerror[E0599]: no method named `abs` found for type `f64` in the current scope\n   --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/resid-rs-1.1.1/src/sampler.rs:615:36\n    |\n615 |                 let sincwt = if wt.abs() >= 1e-6 { wt.sin() / wt } else { 1.0 };\n    |                                    ^^^ method not found in `f64`\n\nerror[E0599]: no method named `sin` found for type `f64` in the current scope\n   --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/resid-rs-1.1.1/src/sampler.rs:615:55\n    |\n615 |                 let sincwt = if wt.abs() >= 1e-6 { wt.sin() / wt } else { 1.0 };\n    |                                                       ^^^\n    |\nhelp: there is a method `min` with a similar name, but with different arguments\n   --> /Users/graysonnocera/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/f64.rs:963:5\n    |\n963 |     pub fn min(self, other: f64) -> f64 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `sqrt` found for type `f64` in the current scope\n   --> /Users/graysonnocera/.cargo/registry/src/index.crates.io-6f17d22bba15001f/resid-rs-1.1.1/src/sampler.rs:645:15\n    |\n645 |         value.sqrt()\n    |               ^^^^ method not found in `f64`\n\nSome errors have detailed explanations: E0463, E0599.\nFor more information about an error, try `rustc --explain E0463`.\nerror: could not compile `resid-rs` (lib) due to 8 previous errors\n",
      "stdout": ""
    },
    "features": [
      "std"
    ],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/zinc64-loader-0.8.0/src",
    "time_to_build": 337,
    "time_to_solve": 43
  }
]