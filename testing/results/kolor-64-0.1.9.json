[
  {
    "built_with_features": "libm",
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features",
        "--features",
        "libm"
      ],
      "code": 0,
      "stderr": "warning: unexpected `cfg` condition value: `f32`\n   --> kolor/src/details/color.rs:446:37\n    |\n446 |         #[cfg(all(feature = \"glam\", feature = \"f32\"))]\n    |                                     ^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `feature` are: `color-matrices`, `default`, `f64`, `glam`, `libm`, `libm-glam`, `num-traits`, `serde`, `serde1`, `std`, and `std-glam`\n    = help: consider adding `f32` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition value: `f32`\n   --> kolor/src/details/color.rs:468:37\n    |\n468 |         #[cfg(all(feature = \"glam\", feature = \"f32\"))]\n    |                                     ^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `feature` are: `color-matrices`, `default`, `f64`, `glam`, `libm`, `libm-glam`, `num-traits`, `serde`, `serde1`, `std`, and `std-glam`\n    = help: consider adding `f32` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: `kolor-64` (lib) generated 2 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.01s\n",
      "stdout": ""
    },
    "features": [
      "libm",
      "std"
    ],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/kolor-64-0.1.9/kolor/src",
    "time_to_build": 45,
    "time_to_solve": 168
  }
]