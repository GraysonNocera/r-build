[
  {
    "built_with_features": null,
    "command": {
      "args": [
        "build",
        "--target",
        "thumbv7m-none-eabi",
        "--no-default-features"
      ],
      "code": 101,
      "stderr": "   Compiling ralte32 v0.1.3 (/Users/graysonnocera/Downloads/695-Project/dataset/nostd-failed-crates/crates/ralte32-0.1.3)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7m-none-eabi` target may not support the standard library\n  = note: `std` is required by `ralte32` because it does not declare `#![no_std]`\n\nerror[E0463]: can't find crate for `std`\n   --> src/lib.rs:302:13\n    |\n302 |             std::process::abort();\n    |             ^^^ can't find crate\n    |\n    = note: the `thumbv7m-none-eabi` target may not support the standard library\n\nerror[E0463]: can't find crate for `std`\n   --> src/lib.rs:321:13\n    |\n321 |             std::process::abort();\n    |             ^^^ can't find crate\n    |\n    = note: the `thumbv7m-none-eabi` target may not support the standard library\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:331:22\n    |\n331 | fn write_stdout(buf: &[u8]) {\n    |                      ^^^^^\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:335:22\n    |\n335 | fn write_stderr(buf: &[u8]) {\n    |                      ^^^^^\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:345:20\n    |\n345 | impl Rv32Write for &[u8] {\n    |                    ^^^^^\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:352:5\n    |\n352 |     fn write(&self, writer: fn(&[u8])) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:360:5\n    |\n360 |     fn write(&self, writer: fn(&[u8])) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:366:5\n    |\n366 |     fn write(&self, writer: fn(&[u8])) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: requires `sized` lang_item\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:390:5\n    |\n390 |     fn write(&self, writer: fn(&[u8])) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:405:13\n    |\n405 |             fn write(&self, writer: fn(&[u8])) {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n462 | impl_write! { u128, [ u8, u16, u32, u64 ] }\n    | ------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `impl_write` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:405:13\n    |\n405 |             fn write(&self, writer: fn(&[u8])) {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n463 | impl_write! { i128, [ i8, i16, i32, i64 ] }\n    | ------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `impl_write` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:422:13\n    |\n422 |             fn write(&self, writer: fn(&[u8])) {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n464 | impl_binhex! { u8, u16, u32, u64, u128 }\n    | ---------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `impl_binhex` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:439:13\n    |\n439 |             fn write(&self, writer: fn(&[u8])) {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n464 | impl_binhex! { u8, u16, u32, u64, u128 }\n    | ---------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `impl_binhex` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:287:47\n    |\n287 |     pub fn write(_file_descriptor: u32, _buf: &[u8]) {\n    |                                               ^^^^^\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:472:23\n    |\n472 |     pub fn write(buf: &[u8], back_writer: fn(&[u8])) {\n    |                       ^^^^^\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:488:31\n    |\n488 |     pub fn flush(back_writer: fn(&[u8])) {\n    |                               ^^^^^^^^^\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:493:30\n    |\n493 |     pub fn write_stdout(buf: &[u8]) {\n    |                              ^^^^^\n\nerror: requires `sized` lang_item\n   --> src/lib.rs:501:30\n    |\n501 |     pub fn write_stderr(buf: &[u8]) {\n    |                              ^^^^^\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `ralte32` (lib) due to 34 previous errors\n",
      "stdout": ""
    },
    "features": [],
    "project": "../../../Downloads/695-Project/dataset/nostd-failed-crates/crates/ralte32-0.1.3/src",
    "time_to_build": 131,
    "time_to_solve": 23
  }
]